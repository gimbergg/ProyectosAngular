// Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

import { DocumentNode } from "graphql";
import {
  makePrismaClientClass,
  BaseClientOptions,
  Model
} from "prisma-client-lib";
import { typeDefs } from "./prisma-schema";

export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

export type Maybe<T> = T | undefined | null;

export interface Exists {
  sifeSincronizar: (where?: SifeSincronizarWhereInput) => Promise<boolean>;
  sifeSincronizarActividade: (
    where?: SifeSincronizarActividadeWhereInput
  ) => Promise<boolean>;
  sifeSincronizarListaLeyendasFactura: (
    where?: SifeSincronizarListaLeyendasFacturaWhereInput
  ) => Promise<boolean>;
  sifeSincronizarListaMensajesServicio: (
    where?: SifeSincronizarListaMensajesServicioWhereInput
  ) => Promise<boolean>;
  sifeSincronizarListaProductosServicio: (
    where?: SifeSincronizarListaProductosServicioWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaEventosSignificativo: (
    where?: SifeSincronizarParametricaEventosSignificativoWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaMotivoAnulacion: (
    where?: SifeSincronizarParametricaMotivoAnulacionWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaPaisOrigen: (
    where?: SifeSincronizarParametricaPaisOrigenWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoAmbiente: (
    where?: SifeSincronizarParametricaTipoAmbienteWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoComponente: (
    where?: SifeSincronizarParametricaTipoComponenteWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoDepartamento: (
    where?: SifeSincronizarParametricaTipoDepartamentoWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoDocumentoFiscal: (
    where?: SifeSincronizarParametricaTipoDocumentoFiscalWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoDocumentoIdentidad: (
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoDocumentoSector: (
    where?: SifeSincronizarParametricaTipoDocumentoSectorWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoEmision: (
    where?: SifeSincronizarParametricaTipoEmisionWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoMetodoPago: (
    where?: SifeSincronizarParametricaTipoMetodoPagoWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoModalidad: (
    where?: SifeSincronizarParametricaTipoModalidadWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoMoneda: (
    where?: SifeSincronizarParametricaTipoMonedaWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaTipoPuntoVenta: (
    where?: SifeSincronizarParametricaTipoPuntoVentaWhereInput
  ) => Promise<boolean>;
  sifeSincronizarParametricaUnidadMedida: (
    where?: SifeSincronizarParametricaUnidadMedidaWhereInput
  ) => Promise<boolean>;
}

export interface Node {}

export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;

export interface Fragmentable {
  $fragment<T>(fragment: string | DocumentNode): Promise<T>;
}

export interface Prisma {
  $exists: Exists;
  $graphql: <T = any>(
    query: string,
    variables?: { [key: string]: any }
  ) => Promise<T>;

  /**
   * Queries
   */

  sifeSincronizar: (
    where: SifeSincronizarWhereUniqueInput
  ) => SifeSincronizarNullablePromise;
  sifeSincronizars: (args?: {
    where?: SifeSincronizarWhereInput;
    orderBy?: SifeSincronizarOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizar>;
  sifeSincronizarsConnection: (args?: {
    where?: SifeSincronizarWhereInput;
    orderBy?: SifeSincronizarOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarConnectionPromise;
  sifeSincronizarActividade: (
    where: SifeSincronizarActividadeWhereUniqueInput
  ) => SifeSincronizarActividadeNullablePromise;
  sifeSincronizarActividades: (args?: {
    where?: SifeSincronizarActividadeWhereInput;
    orderBy?: SifeSincronizarActividadeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarActividade>;
  sifeSincronizarActividadesConnection: (args?: {
    where?: SifeSincronizarActividadeWhereInput;
    orderBy?: SifeSincronizarActividadeOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarActividadeConnectionPromise;
  sifeSincronizarListaLeyendasFactura: (
    where: SifeSincronizarListaLeyendasFacturaWhereUniqueInput
  ) => SifeSincronizarListaLeyendasFacturaNullablePromise;
  sifeSincronizarListaLeyendasFacturas: (args?: {
    where?: SifeSincronizarListaLeyendasFacturaWhereInput;
    orderBy?: SifeSincronizarListaLeyendasFacturaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarListaLeyendasFactura>;
  sifeSincronizarListaLeyendasFacturasConnection: (args?: {
    where?: SifeSincronizarListaLeyendasFacturaWhereInput;
    orderBy?: SifeSincronizarListaLeyendasFacturaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarListaLeyendasFacturaConnectionPromise;
  sifeSincronizarListaMensajesServicio: (
    where: SifeSincronizarListaMensajesServicioWhereUniqueInput
  ) => SifeSincronizarListaMensajesServicioNullablePromise;
  sifeSincronizarListaMensajesServicios: (args?: {
    where?: SifeSincronizarListaMensajesServicioWhereInput;
    orderBy?: SifeSincronizarListaMensajesServicioOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarListaMensajesServicio>;
  sifeSincronizarListaMensajesServiciosConnection: (args?: {
    where?: SifeSincronizarListaMensajesServicioWhereInput;
    orderBy?: SifeSincronizarListaMensajesServicioOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarListaMensajesServicioConnectionPromise;
  sifeSincronizarListaProductosServicio: (
    where: SifeSincronizarListaProductosServicioWhereUniqueInput
  ) => SifeSincronizarListaProductosServicioNullablePromise;
  sifeSincronizarListaProductosServicios: (args?: {
    where?: SifeSincronizarListaProductosServicioWhereInput;
    orderBy?: SifeSincronizarListaProductosServicioOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarListaProductosServicio>;
  sifeSincronizarListaProductosServiciosConnection: (args?: {
    where?: SifeSincronizarListaProductosServicioWhereInput;
    orderBy?: SifeSincronizarListaProductosServicioOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarListaProductosServicioConnectionPromise;
  sifeSincronizarParametricaEventosSignificativo: (
    where: SifeSincronizarParametricaEventosSignificativoWhereUniqueInput
  ) => SifeSincronizarParametricaEventosSignificativoNullablePromise;
  sifeSincronizarParametricaEventosSignificativoes: (args?: {
    where?: SifeSincronizarParametricaEventosSignificativoWhereInput;
    orderBy?: SifeSincronizarParametricaEventosSignificativoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaEventosSignificativo>;
  sifeSincronizarParametricaEventosSignificativoesConnection: (args?: {
    where?: SifeSincronizarParametricaEventosSignificativoWhereInput;
    orderBy?: SifeSincronizarParametricaEventosSignificativoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaEventosSignificativoConnectionPromise;
  sifeSincronizarParametricaMotivoAnulacion: (
    where: SifeSincronizarParametricaMotivoAnulacionWhereUniqueInput
  ) => SifeSincronizarParametricaMotivoAnulacionNullablePromise;
  sifeSincronizarParametricaMotivoAnulacions: (args?: {
    where?: SifeSincronizarParametricaMotivoAnulacionWhereInput;
    orderBy?: SifeSincronizarParametricaMotivoAnulacionOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaMotivoAnulacion>;
  sifeSincronizarParametricaMotivoAnulacionsConnection: (args?: {
    where?: SifeSincronizarParametricaMotivoAnulacionWhereInput;
    orderBy?: SifeSincronizarParametricaMotivoAnulacionOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaMotivoAnulacionConnectionPromise;
  sifeSincronizarParametricaPaisOrigen: (
    where: SifeSincronizarParametricaPaisOrigenWhereUniqueInput
  ) => SifeSincronizarParametricaPaisOrigenNullablePromise;
  sifeSincronizarParametricaPaisOrigens: (args?: {
    where?: SifeSincronizarParametricaPaisOrigenWhereInput;
    orderBy?: SifeSincronizarParametricaPaisOrigenOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaPaisOrigen>;
  sifeSincronizarParametricaPaisOrigensConnection: (args?: {
    where?: SifeSincronizarParametricaPaisOrigenWhereInput;
    orderBy?: SifeSincronizarParametricaPaisOrigenOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaPaisOrigenConnectionPromise;
  sifeSincronizarParametricaTipoAmbiente: (
    where: SifeSincronizarParametricaTipoAmbienteWhereUniqueInput
  ) => SifeSincronizarParametricaTipoAmbienteNullablePromise;
  sifeSincronizarParametricaTipoAmbientes: (args?: {
    where?: SifeSincronizarParametricaTipoAmbienteWhereInput;
    orderBy?: SifeSincronizarParametricaTipoAmbienteOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoAmbiente>;
  sifeSincronizarParametricaTipoAmbientesConnection: (args?: {
    where?: SifeSincronizarParametricaTipoAmbienteWhereInput;
    orderBy?: SifeSincronizarParametricaTipoAmbienteOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoAmbienteConnectionPromise;
  sifeSincronizarParametricaTipoComponente: (
    where: SifeSincronizarParametricaTipoComponenteWhereUniqueInput
  ) => SifeSincronizarParametricaTipoComponenteNullablePromise;
  sifeSincronizarParametricaTipoComponentes: (args?: {
    where?: SifeSincronizarParametricaTipoComponenteWhereInput;
    orderBy?: SifeSincronizarParametricaTipoComponenteOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoComponente>;
  sifeSincronizarParametricaTipoComponentesConnection: (args?: {
    where?: SifeSincronizarParametricaTipoComponenteWhereInput;
    orderBy?: SifeSincronizarParametricaTipoComponenteOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoComponenteConnectionPromise;
  sifeSincronizarParametricaTipoDepartamento: (
    where: SifeSincronizarParametricaTipoDepartamentoWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDepartamentoNullablePromise;
  sifeSincronizarParametricaTipoDepartamentoes: (args?: {
    where?: SifeSincronizarParametricaTipoDepartamentoWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDepartamentoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoDepartamento>;
  sifeSincronizarParametricaTipoDepartamentoesConnection: (args?: {
    where?: SifeSincronizarParametricaTipoDepartamentoWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDepartamentoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoDepartamentoConnectionPromise;
  sifeSincronizarParametricaTipoDocumentoFiscal: (
    where: SifeSincronizarParametricaTipoDocumentoFiscalWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoFiscalNullablePromise;
  sifeSincronizarParametricaTipoDocumentoFiscals: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoFiscalWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoFiscalOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoDocumentoFiscal>;
  sifeSincronizarParametricaTipoDocumentoFiscalsConnection: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoFiscalWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoFiscalOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoDocumentoFiscalConnectionPromise;
  sifeSincronizarParametricaTipoDocumentoIdentidad: (
    where: SifeSincronizarParametricaTipoDocumentoIdentidadWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoIdentidadNullablePromise;
  sifeSincronizarParametricaTipoDocumentoIdentidads: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoIdentidadOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoDocumentoIdentidad>;
  sifeSincronizarParametricaTipoDocumentoIdentidadsConnection: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoIdentidadOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoDocumentoIdentidadConnectionPromise;
  sifeSincronizarParametricaTipoDocumentoSector: (
    where: SifeSincronizarParametricaTipoDocumentoSectorWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoSectorNullablePromise;
  sifeSincronizarParametricaTipoDocumentoSectors: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoSectorWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoSectorOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoDocumentoSector>;
  sifeSincronizarParametricaTipoDocumentoSectorsConnection: (args?: {
    where?: SifeSincronizarParametricaTipoDocumentoSectorWhereInput;
    orderBy?: SifeSincronizarParametricaTipoDocumentoSectorOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoDocumentoSectorConnectionPromise;
  sifeSincronizarParametricaTipoEmision: (
    where: SifeSincronizarParametricaTipoEmisionWhereUniqueInput
  ) => SifeSincronizarParametricaTipoEmisionNullablePromise;
  sifeSincronizarParametricaTipoEmisions: (args?: {
    where?: SifeSincronizarParametricaTipoEmisionWhereInput;
    orderBy?: SifeSincronizarParametricaTipoEmisionOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoEmision>;
  sifeSincronizarParametricaTipoEmisionsConnection: (args?: {
    where?: SifeSincronizarParametricaTipoEmisionWhereInput;
    orderBy?: SifeSincronizarParametricaTipoEmisionOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoEmisionConnectionPromise;
  sifeSincronizarParametricaTipoMetodoPago: (
    where: SifeSincronizarParametricaTipoMetodoPagoWhereUniqueInput
  ) => SifeSincronizarParametricaTipoMetodoPagoNullablePromise;
  sifeSincronizarParametricaTipoMetodoPagoes: (args?: {
    where?: SifeSincronizarParametricaTipoMetodoPagoWhereInput;
    orderBy?: SifeSincronizarParametricaTipoMetodoPagoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoMetodoPago>;
  sifeSincronizarParametricaTipoMetodoPagoesConnection: (args?: {
    where?: SifeSincronizarParametricaTipoMetodoPagoWhereInput;
    orderBy?: SifeSincronizarParametricaTipoMetodoPagoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoMetodoPagoConnectionPromise;
  sifeSincronizarParametricaTipoModalidad: (
    where: SifeSincronizarParametricaTipoModalidadWhereUniqueInput
  ) => SifeSincronizarParametricaTipoModalidadNullablePromise;
  sifeSincronizarParametricaTipoModalidads: (args?: {
    where?: SifeSincronizarParametricaTipoModalidadWhereInput;
    orderBy?: SifeSincronizarParametricaTipoModalidadOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoModalidad>;
  sifeSincronizarParametricaTipoModalidadsConnection: (args?: {
    where?: SifeSincronizarParametricaTipoModalidadWhereInput;
    orderBy?: SifeSincronizarParametricaTipoModalidadOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoModalidadConnectionPromise;
  sifeSincronizarParametricaTipoMoneda: (
    where: SifeSincronizarParametricaTipoMonedaWhereUniqueInput
  ) => SifeSincronizarParametricaTipoMonedaNullablePromise;
  sifeSincronizarParametricaTipoMonedas: (args?: {
    where?: SifeSincronizarParametricaTipoMonedaWhereInput;
    orderBy?: SifeSincronizarParametricaTipoMonedaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoMoneda>;
  sifeSincronizarParametricaTipoMonedasConnection: (args?: {
    where?: SifeSincronizarParametricaTipoMonedaWhereInput;
    orderBy?: SifeSincronizarParametricaTipoMonedaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoMonedaConnectionPromise;
  sifeSincronizarParametricaTipoPuntoVenta: (
    where: SifeSincronizarParametricaTipoPuntoVentaWhereUniqueInput
  ) => SifeSincronizarParametricaTipoPuntoVentaNullablePromise;
  sifeSincronizarParametricaTipoPuntoVentas: (args?: {
    where?: SifeSincronizarParametricaTipoPuntoVentaWhereInput;
    orderBy?: SifeSincronizarParametricaTipoPuntoVentaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaTipoPuntoVenta>;
  sifeSincronizarParametricaTipoPuntoVentasConnection: (args?: {
    where?: SifeSincronizarParametricaTipoPuntoVentaWhereInput;
    orderBy?: SifeSincronizarParametricaTipoPuntoVentaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaTipoPuntoVentaConnectionPromise;
  sifeSincronizarParametricaUnidadMedida: (
    where: SifeSincronizarParametricaUnidadMedidaWhereUniqueInput
  ) => SifeSincronizarParametricaUnidadMedidaNullablePromise;
  sifeSincronizarParametricaUnidadMedidas: (args?: {
    where?: SifeSincronizarParametricaUnidadMedidaWhereInput;
    orderBy?: SifeSincronizarParametricaUnidadMedidaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<SifeSincronizarParametricaUnidadMedida>;
  sifeSincronizarParametricaUnidadMedidasConnection: (args?: {
    where?: SifeSincronizarParametricaUnidadMedidaWhereInput;
    orderBy?: SifeSincronizarParametricaUnidadMedidaOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => SifeSincronizarParametricaUnidadMedidaConnectionPromise;
  node: (args: { id: ID_Output }) => Node;

  /**
   * Mutations
   */

  createSifeSincronizar: (
    data: SifeSincronizarCreateInput
  ) => SifeSincronizarPromise;
  updateSifeSincronizar: (args: {
    data: SifeSincronizarUpdateInput;
    where: SifeSincronizarWhereUniqueInput;
  }) => SifeSincronizarPromise;
  updateManySifeSincronizars: (args: {
    data: SifeSincronizarUpdateManyMutationInput;
    where?: SifeSincronizarWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizar: (args: {
    where: SifeSincronizarWhereUniqueInput;
    create: SifeSincronizarCreateInput;
    update: SifeSincronizarUpdateInput;
  }) => SifeSincronizarPromise;
  deleteSifeSincronizar: (
    where: SifeSincronizarWhereUniqueInput
  ) => SifeSincronizarPromise;
  deleteManySifeSincronizars: (
    where?: SifeSincronizarWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarActividade: (
    data: SifeSincronizarActividadeCreateInput
  ) => SifeSincronizarActividadePromise;
  updateSifeSincronizarActividade: (args: {
    data: SifeSincronizarActividadeUpdateInput;
    where: SifeSincronizarActividadeWhereUniqueInput;
  }) => SifeSincronizarActividadePromise;
  updateManySifeSincronizarActividades: (args: {
    data: SifeSincronizarActividadeUpdateManyMutationInput;
    where?: SifeSincronizarActividadeWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarActividade: (args: {
    where: SifeSincronizarActividadeWhereUniqueInput;
    create: SifeSincronizarActividadeCreateInput;
    update: SifeSincronizarActividadeUpdateInput;
  }) => SifeSincronizarActividadePromise;
  deleteSifeSincronizarActividade: (
    where: SifeSincronizarActividadeWhereUniqueInput
  ) => SifeSincronizarActividadePromise;
  deleteManySifeSincronizarActividades: (
    where?: SifeSincronizarActividadeWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarListaLeyendasFactura: (
    data: SifeSincronizarListaLeyendasFacturaCreateInput
  ) => SifeSincronizarListaLeyendasFacturaPromise;
  updateSifeSincronizarListaLeyendasFactura: (args: {
    data: SifeSincronizarListaLeyendasFacturaUpdateInput;
    where: SifeSincronizarListaLeyendasFacturaWhereUniqueInput;
  }) => SifeSincronizarListaLeyendasFacturaPromise;
  updateManySifeSincronizarListaLeyendasFacturas: (args: {
    data: SifeSincronizarListaLeyendasFacturaUpdateManyMutationInput;
    where?: SifeSincronizarListaLeyendasFacturaWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarListaLeyendasFactura: (args: {
    where: SifeSincronizarListaLeyendasFacturaWhereUniqueInput;
    create: SifeSincronizarListaLeyendasFacturaCreateInput;
    update: SifeSincronizarListaLeyendasFacturaUpdateInput;
  }) => SifeSincronizarListaLeyendasFacturaPromise;
  deleteSifeSincronizarListaLeyendasFactura: (
    where: SifeSincronizarListaLeyendasFacturaWhereUniqueInput
  ) => SifeSincronizarListaLeyendasFacturaPromise;
  deleteManySifeSincronizarListaLeyendasFacturas: (
    where?: SifeSincronizarListaLeyendasFacturaWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarListaMensajesServicio: (
    data: SifeSincronizarListaMensajesServicioCreateInput
  ) => SifeSincronizarListaMensajesServicioPromise;
  updateSifeSincronizarListaMensajesServicio: (args: {
    data: SifeSincronizarListaMensajesServicioUpdateInput;
    where: SifeSincronizarListaMensajesServicioWhereUniqueInput;
  }) => SifeSincronizarListaMensajesServicioPromise;
  updateManySifeSincronizarListaMensajesServicios: (args: {
    data: SifeSincronizarListaMensajesServicioUpdateManyMutationInput;
    where?: SifeSincronizarListaMensajesServicioWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarListaMensajesServicio: (args: {
    where: SifeSincronizarListaMensajesServicioWhereUniqueInput;
    create: SifeSincronizarListaMensajesServicioCreateInput;
    update: SifeSincronizarListaMensajesServicioUpdateInput;
  }) => SifeSincronizarListaMensajesServicioPromise;
  deleteSifeSincronizarListaMensajesServicio: (
    where: SifeSincronizarListaMensajesServicioWhereUniqueInput
  ) => SifeSincronizarListaMensajesServicioPromise;
  deleteManySifeSincronizarListaMensajesServicios: (
    where?: SifeSincronizarListaMensajesServicioWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarListaProductosServicio: (
    data: SifeSincronizarListaProductosServicioCreateInput
  ) => SifeSincronizarListaProductosServicioPromise;
  updateSifeSincronizarListaProductosServicio: (args: {
    data: SifeSincronizarListaProductosServicioUpdateInput;
    where: SifeSincronizarListaProductosServicioWhereUniqueInput;
  }) => SifeSincronizarListaProductosServicioPromise;
  updateManySifeSincronizarListaProductosServicios: (args: {
    data: SifeSincronizarListaProductosServicioUpdateManyMutationInput;
    where?: SifeSincronizarListaProductosServicioWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarListaProductosServicio: (args: {
    where: SifeSincronizarListaProductosServicioWhereUniqueInput;
    create: SifeSincronizarListaProductosServicioCreateInput;
    update: SifeSincronizarListaProductosServicioUpdateInput;
  }) => SifeSincronizarListaProductosServicioPromise;
  deleteSifeSincronizarListaProductosServicio: (
    where: SifeSincronizarListaProductosServicioWhereUniqueInput
  ) => SifeSincronizarListaProductosServicioPromise;
  deleteManySifeSincronizarListaProductosServicios: (
    where?: SifeSincronizarListaProductosServicioWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaEventosSignificativo: (
    data: SifeSincronizarParametricaEventosSignificativoCreateInput
  ) => SifeSincronizarParametricaEventosSignificativoPromise;
  updateSifeSincronizarParametricaEventosSignificativo: (args: {
    data: SifeSincronizarParametricaEventosSignificativoUpdateInput;
    where: SifeSincronizarParametricaEventosSignificativoWhereUniqueInput;
  }) => SifeSincronizarParametricaEventosSignificativoPromise;
  updateManySifeSincronizarParametricaEventosSignificativoes: (args: {
    data: SifeSincronizarParametricaEventosSignificativoUpdateManyMutationInput;
    where?: SifeSincronizarParametricaEventosSignificativoWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaEventosSignificativo: (args: {
    where: SifeSincronizarParametricaEventosSignificativoWhereUniqueInput;
    create: SifeSincronizarParametricaEventosSignificativoCreateInput;
    update: SifeSincronizarParametricaEventosSignificativoUpdateInput;
  }) => SifeSincronizarParametricaEventosSignificativoPromise;
  deleteSifeSincronizarParametricaEventosSignificativo: (
    where: SifeSincronizarParametricaEventosSignificativoWhereUniqueInput
  ) => SifeSincronizarParametricaEventosSignificativoPromise;
  deleteManySifeSincronizarParametricaEventosSignificativoes: (
    where?: SifeSincronizarParametricaEventosSignificativoWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaMotivoAnulacion: (
    data: SifeSincronizarParametricaMotivoAnulacionCreateInput
  ) => SifeSincronizarParametricaMotivoAnulacionPromise;
  updateSifeSincronizarParametricaMotivoAnulacion: (args: {
    data: SifeSincronizarParametricaMotivoAnulacionUpdateInput;
    where: SifeSincronizarParametricaMotivoAnulacionWhereUniqueInput;
  }) => SifeSincronizarParametricaMotivoAnulacionPromise;
  updateManySifeSincronizarParametricaMotivoAnulacions: (args: {
    data: SifeSincronizarParametricaMotivoAnulacionUpdateManyMutationInput;
    where?: SifeSincronizarParametricaMotivoAnulacionWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaMotivoAnulacion: (args: {
    where: SifeSincronizarParametricaMotivoAnulacionWhereUniqueInput;
    create: SifeSincronizarParametricaMotivoAnulacionCreateInput;
    update: SifeSincronizarParametricaMotivoAnulacionUpdateInput;
  }) => SifeSincronizarParametricaMotivoAnulacionPromise;
  deleteSifeSincronizarParametricaMotivoAnulacion: (
    where: SifeSincronizarParametricaMotivoAnulacionWhereUniqueInput
  ) => SifeSincronizarParametricaMotivoAnulacionPromise;
  deleteManySifeSincronizarParametricaMotivoAnulacions: (
    where?: SifeSincronizarParametricaMotivoAnulacionWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaPaisOrigen: (
    data: SifeSincronizarParametricaPaisOrigenCreateInput
  ) => SifeSincronizarParametricaPaisOrigenPromise;
  updateSifeSincronizarParametricaPaisOrigen: (args: {
    data: SifeSincronizarParametricaPaisOrigenUpdateInput;
    where: SifeSincronizarParametricaPaisOrigenWhereUniqueInput;
  }) => SifeSincronizarParametricaPaisOrigenPromise;
  updateManySifeSincronizarParametricaPaisOrigens: (args: {
    data: SifeSincronizarParametricaPaisOrigenUpdateManyMutationInput;
    where?: SifeSincronizarParametricaPaisOrigenWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaPaisOrigen: (args: {
    where: SifeSincronizarParametricaPaisOrigenWhereUniqueInput;
    create: SifeSincronizarParametricaPaisOrigenCreateInput;
    update: SifeSincronizarParametricaPaisOrigenUpdateInput;
  }) => SifeSincronizarParametricaPaisOrigenPromise;
  deleteSifeSincronizarParametricaPaisOrigen: (
    where: SifeSincronizarParametricaPaisOrigenWhereUniqueInput
  ) => SifeSincronizarParametricaPaisOrigenPromise;
  deleteManySifeSincronizarParametricaPaisOrigens: (
    where?: SifeSincronizarParametricaPaisOrigenWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoAmbiente: (
    data: SifeSincronizarParametricaTipoAmbienteCreateInput
  ) => SifeSincronizarParametricaTipoAmbientePromise;
  updateSifeSincronizarParametricaTipoAmbiente: (args: {
    data: SifeSincronizarParametricaTipoAmbienteUpdateInput;
    where: SifeSincronizarParametricaTipoAmbienteWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoAmbientePromise;
  updateManySifeSincronizarParametricaTipoAmbientes: (args: {
    data: SifeSincronizarParametricaTipoAmbienteUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoAmbienteWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoAmbiente: (args: {
    where: SifeSincronizarParametricaTipoAmbienteWhereUniqueInput;
    create: SifeSincronizarParametricaTipoAmbienteCreateInput;
    update: SifeSincronizarParametricaTipoAmbienteUpdateInput;
  }) => SifeSincronizarParametricaTipoAmbientePromise;
  deleteSifeSincronizarParametricaTipoAmbiente: (
    where: SifeSincronizarParametricaTipoAmbienteWhereUniqueInput
  ) => SifeSincronizarParametricaTipoAmbientePromise;
  deleteManySifeSincronizarParametricaTipoAmbientes: (
    where?: SifeSincronizarParametricaTipoAmbienteWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoComponente: (
    data: SifeSincronizarParametricaTipoComponenteCreateInput
  ) => SifeSincronizarParametricaTipoComponentePromise;
  updateSifeSincronizarParametricaTipoComponente: (args: {
    data: SifeSincronizarParametricaTipoComponenteUpdateInput;
    where: SifeSincronizarParametricaTipoComponenteWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoComponentePromise;
  updateManySifeSincronizarParametricaTipoComponentes: (args: {
    data: SifeSincronizarParametricaTipoComponenteUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoComponenteWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoComponente: (args: {
    where: SifeSincronizarParametricaTipoComponenteWhereUniqueInput;
    create: SifeSincronizarParametricaTipoComponenteCreateInput;
    update: SifeSincronizarParametricaTipoComponenteUpdateInput;
  }) => SifeSincronizarParametricaTipoComponentePromise;
  deleteSifeSincronizarParametricaTipoComponente: (
    where: SifeSincronizarParametricaTipoComponenteWhereUniqueInput
  ) => SifeSincronizarParametricaTipoComponentePromise;
  deleteManySifeSincronizarParametricaTipoComponentes: (
    where?: SifeSincronizarParametricaTipoComponenteWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoDepartamento: (
    data: SifeSincronizarParametricaTipoDepartamentoCreateInput
  ) => SifeSincronizarParametricaTipoDepartamentoPromise;
  updateSifeSincronizarParametricaTipoDepartamento: (args: {
    data: SifeSincronizarParametricaTipoDepartamentoUpdateInput;
    where: SifeSincronizarParametricaTipoDepartamentoWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoDepartamentoPromise;
  updateManySifeSincronizarParametricaTipoDepartamentoes: (args: {
    data: SifeSincronizarParametricaTipoDepartamentoUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoDepartamentoWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoDepartamento: (args: {
    where: SifeSincronizarParametricaTipoDepartamentoWhereUniqueInput;
    create: SifeSincronizarParametricaTipoDepartamentoCreateInput;
    update: SifeSincronizarParametricaTipoDepartamentoUpdateInput;
  }) => SifeSincronizarParametricaTipoDepartamentoPromise;
  deleteSifeSincronizarParametricaTipoDepartamento: (
    where: SifeSincronizarParametricaTipoDepartamentoWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDepartamentoPromise;
  deleteManySifeSincronizarParametricaTipoDepartamentoes: (
    where?: SifeSincronizarParametricaTipoDepartamentoWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoDocumentoFiscal: (
    data: SifeSincronizarParametricaTipoDocumentoFiscalCreateInput
  ) => SifeSincronizarParametricaTipoDocumentoFiscalPromise;
  updateSifeSincronizarParametricaTipoDocumentoFiscal: (args: {
    data: SifeSincronizarParametricaTipoDocumentoFiscalUpdateInput;
    where: SifeSincronizarParametricaTipoDocumentoFiscalWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoDocumentoFiscalPromise;
  updateManySifeSincronizarParametricaTipoDocumentoFiscals: (args: {
    data: SifeSincronizarParametricaTipoDocumentoFiscalUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoDocumentoFiscalWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoDocumentoFiscal: (args: {
    where: SifeSincronizarParametricaTipoDocumentoFiscalWhereUniqueInput;
    create: SifeSincronizarParametricaTipoDocumentoFiscalCreateInput;
    update: SifeSincronizarParametricaTipoDocumentoFiscalUpdateInput;
  }) => SifeSincronizarParametricaTipoDocumentoFiscalPromise;
  deleteSifeSincronizarParametricaTipoDocumentoFiscal: (
    where: SifeSincronizarParametricaTipoDocumentoFiscalWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoFiscalPromise;
  deleteManySifeSincronizarParametricaTipoDocumentoFiscals: (
    where?: SifeSincronizarParametricaTipoDocumentoFiscalWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoDocumentoIdentidad: (
    data: SifeSincronizarParametricaTipoDocumentoIdentidadCreateInput
  ) => SifeSincronizarParametricaTipoDocumentoIdentidadPromise;
  updateSifeSincronizarParametricaTipoDocumentoIdentidad: (args: {
    data: SifeSincronizarParametricaTipoDocumentoIdentidadUpdateInput;
    where: SifeSincronizarParametricaTipoDocumentoIdentidadWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoDocumentoIdentidadPromise;
  updateManySifeSincronizarParametricaTipoDocumentoIdentidads: (args: {
    data: SifeSincronizarParametricaTipoDocumentoIdentidadUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoDocumentoIdentidad: (args: {
    where: SifeSincronizarParametricaTipoDocumentoIdentidadWhereUniqueInput;
    create: SifeSincronizarParametricaTipoDocumentoIdentidadCreateInput;
    update: SifeSincronizarParametricaTipoDocumentoIdentidadUpdateInput;
  }) => SifeSincronizarParametricaTipoDocumentoIdentidadPromise;
  deleteSifeSincronizarParametricaTipoDocumentoIdentidad: (
    where: SifeSincronizarParametricaTipoDocumentoIdentidadWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoIdentidadPromise;
  deleteManySifeSincronizarParametricaTipoDocumentoIdentidads: (
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoDocumentoSector: (
    data: SifeSincronizarParametricaTipoDocumentoSectorCreateInput
  ) => SifeSincronizarParametricaTipoDocumentoSectorPromise;
  updateSifeSincronizarParametricaTipoDocumentoSector: (args: {
    data: SifeSincronizarParametricaTipoDocumentoSectorUpdateInput;
    where: SifeSincronizarParametricaTipoDocumentoSectorWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoDocumentoSectorPromise;
  updateManySifeSincronizarParametricaTipoDocumentoSectors: (args: {
    data: SifeSincronizarParametricaTipoDocumentoSectorUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoDocumentoSectorWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoDocumentoSector: (args: {
    where: SifeSincronizarParametricaTipoDocumentoSectorWhereUniqueInput;
    create: SifeSincronizarParametricaTipoDocumentoSectorCreateInput;
    update: SifeSincronizarParametricaTipoDocumentoSectorUpdateInput;
  }) => SifeSincronizarParametricaTipoDocumentoSectorPromise;
  deleteSifeSincronizarParametricaTipoDocumentoSector: (
    where: SifeSincronizarParametricaTipoDocumentoSectorWhereUniqueInput
  ) => SifeSincronizarParametricaTipoDocumentoSectorPromise;
  deleteManySifeSincronizarParametricaTipoDocumentoSectors: (
    where?: SifeSincronizarParametricaTipoDocumentoSectorWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoEmision: (
    data: SifeSincronizarParametricaTipoEmisionCreateInput
  ) => SifeSincronizarParametricaTipoEmisionPromise;
  updateSifeSincronizarParametricaTipoEmision: (args: {
    data: SifeSincronizarParametricaTipoEmisionUpdateInput;
    where: SifeSincronizarParametricaTipoEmisionWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoEmisionPromise;
  updateManySifeSincronizarParametricaTipoEmisions: (args: {
    data: SifeSincronizarParametricaTipoEmisionUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoEmisionWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoEmision: (args: {
    where: SifeSincronizarParametricaTipoEmisionWhereUniqueInput;
    create: SifeSincronizarParametricaTipoEmisionCreateInput;
    update: SifeSincronizarParametricaTipoEmisionUpdateInput;
  }) => SifeSincronizarParametricaTipoEmisionPromise;
  deleteSifeSincronizarParametricaTipoEmision: (
    where: SifeSincronizarParametricaTipoEmisionWhereUniqueInput
  ) => SifeSincronizarParametricaTipoEmisionPromise;
  deleteManySifeSincronizarParametricaTipoEmisions: (
    where?: SifeSincronizarParametricaTipoEmisionWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoMetodoPago: (
    data: SifeSincronizarParametricaTipoMetodoPagoCreateInput
  ) => SifeSincronizarParametricaTipoMetodoPagoPromise;
  updateSifeSincronizarParametricaTipoMetodoPago: (args: {
    data: SifeSincronizarParametricaTipoMetodoPagoUpdateInput;
    where: SifeSincronizarParametricaTipoMetodoPagoWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoMetodoPagoPromise;
  updateManySifeSincronizarParametricaTipoMetodoPagoes: (args: {
    data: SifeSincronizarParametricaTipoMetodoPagoUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoMetodoPagoWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoMetodoPago: (args: {
    where: SifeSincronizarParametricaTipoMetodoPagoWhereUniqueInput;
    create: SifeSincronizarParametricaTipoMetodoPagoCreateInput;
    update: SifeSincronizarParametricaTipoMetodoPagoUpdateInput;
  }) => SifeSincronizarParametricaTipoMetodoPagoPromise;
  deleteSifeSincronizarParametricaTipoMetodoPago: (
    where: SifeSincronizarParametricaTipoMetodoPagoWhereUniqueInput
  ) => SifeSincronizarParametricaTipoMetodoPagoPromise;
  deleteManySifeSincronizarParametricaTipoMetodoPagoes: (
    where?: SifeSincronizarParametricaTipoMetodoPagoWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoModalidad: (
    data: SifeSincronizarParametricaTipoModalidadCreateInput
  ) => SifeSincronizarParametricaTipoModalidadPromise;
  updateSifeSincronizarParametricaTipoModalidad: (args: {
    data: SifeSincronizarParametricaTipoModalidadUpdateInput;
    where: SifeSincronizarParametricaTipoModalidadWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoModalidadPromise;
  updateManySifeSincronizarParametricaTipoModalidads: (args: {
    data: SifeSincronizarParametricaTipoModalidadUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoModalidadWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoModalidad: (args: {
    where: SifeSincronizarParametricaTipoModalidadWhereUniqueInput;
    create: SifeSincronizarParametricaTipoModalidadCreateInput;
    update: SifeSincronizarParametricaTipoModalidadUpdateInput;
  }) => SifeSincronizarParametricaTipoModalidadPromise;
  deleteSifeSincronizarParametricaTipoModalidad: (
    where: SifeSincronizarParametricaTipoModalidadWhereUniqueInput
  ) => SifeSincronizarParametricaTipoModalidadPromise;
  deleteManySifeSincronizarParametricaTipoModalidads: (
    where?: SifeSincronizarParametricaTipoModalidadWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoMoneda: (
    data: SifeSincronizarParametricaTipoMonedaCreateInput
  ) => SifeSincronizarParametricaTipoMonedaPromise;
  updateSifeSincronizarParametricaTipoMoneda: (args: {
    data: SifeSincronizarParametricaTipoMonedaUpdateInput;
    where: SifeSincronizarParametricaTipoMonedaWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoMonedaPromise;
  updateManySifeSincronizarParametricaTipoMonedas: (args: {
    data: SifeSincronizarParametricaTipoMonedaUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoMonedaWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoMoneda: (args: {
    where: SifeSincronizarParametricaTipoMonedaWhereUniqueInput;
    create: SifeSincronizarParametricaTipoMonedaCreateInput;
    update: SifeSincronizarParametricaTipoMonedaUpdateInput;
  }) => SifeSincronizarParametricaTipoMonedaPromise;
  deleteSifeSincronizarParametricaTipoMoneda: (
    where: SifeSincronizarParametricaTipoMonedaWhereUniqueInput
  ) => SifeSincronizarParametricaTipoMonedaPromise;
  deleteManySifeSincronizarParametricaTipoMonedas: (
    where?: SifeSincronizarParametricaTipoMonedaWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaTipoPuntoVenta: (
    data: SifeSincronizarParametricaTipoPuntoVentaCreateInput
  ) => SifeSincronizarParametricaTipoPuntoVentaPromise;
  updateSifeSincronizarParametricaTipoPuntoVenta: (args: {
    data: SifeSincronizarParametricaTipoPuntoVentaUpdateInput;
    where: SifeSincronizarParametricaTipoPuntoVentaWhereUniqueInput;
  }) => SifeSincronizarParametricaTipoPuntoVentaPromise;
  updateManySifeSincronizarParametricaTipoPuntoVentas: (args: {
    data: SifeSincronizarParametricaTipoPuntoVentaUpdateManyMutationInput;
    where?: SifeSincronizarParametricaTipoPuntoVentaWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaTipoPuntoVenta: (args: {
    where: SifeSincronizarParametricaTipoPuntoVentaWhereUniqueInput;
    create: SifeSincronizarParametricaTipoPuntoVentaCreateInput;
    update: SifeSincronizarParametricaTipoPuntoVentaUpdateInput;
  }) => SifeSincronizarParametricaTipoPuntoVentaPromise;
  deleteSifeSincronizarParametricaTipoPuntoVenta: (
    where: SifeSincronizarParametricaTipoPuntoVentaWhereUniqueInput
  ) => SifeSincronizarParametricaTipoPuntoVentaPromise;
  deleteManySifeSincronizarParametricaTipoPuntoVentas: (
    where?: SifeSincronizarParametricaTipoPuntoVentaWhereInput
  ) => BatchPayloadPromise;
  createSifeSincronizarParametricaUnidadMedida: (
    data: SifeSincronizarParametricaUnidadMedidaCreateInput
  ) => SifeSincronizarParametricaUnidadMedidaPromise;
  updateSifeSincronizarParametricaUnidadMedida: (args: {
    data: SifeSincronizarParametricaUnidadMedidaUpdateInput;
    where: SifeSincronizarParametricaUnidadMedidaWhereUniqueInput;
  }) => SifeSincronizarParametricaUnidadMedidaPromise;
  updateManySifeSincronizarParametricaUnidadMedidas: (args: {
    data: SifeSincronizarParametricaUnidadMedidaUpdateManyMutationInput;
    where?: SifeSincronizarParametricaUnidadMedidaWhereInput;
  }) => BatchPayloadPromise;
  upsertSifeSincronizarParametricaUnidadMedida: (args: {
    where: SifeSincronizarParametricaUnidadMedidaWhereUniqueInput;
    create: SifeSincronizarParametricaUnidadMedidaCreateInput;
    update: SifeSincronizarParametricaUnidadMedidaUpdateInput;
  }) => SifeSincronizarParametricaUnidadMedidaPromise;
  deleteSifeSincronizarParametricaUnidadMedida: (
    where: SifeSincronizarParametricaUnidadMedidaWhereUniqueInput
  ) => SifeSincronizarParametricaUnidadMedidaPromise;
  deleteManySifeSincronizarParametricaUnidadMedidas: (
    where?: SifeSincronizarParametricaUnidadMedidaWhereInput
  ) => BatchPayloadPromise;

  /**
   * Subscriptions
   */

  $subscribe: Subscription;
}

export interface Subscription {
  sifeSincronizar: (
    where?: SifeSincronizarSubscriptionWhereInput
  ) => SifeSincronizarSubscriptionPayloadSubscription;
  sifeSincronizarActividade: (
    where?: SifeSincronizarActividadeSubscriptionWhereInput
  ) => SifeSincronizarActividadeSubscriptionPayloadSubscription;
  sifeSincronizarListaLeyendasFactura: (
    where?: SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput
  ) => SifeSincronizarListaLeyendasFacturaSubscriptionPayloadSubscription;
  sifeSincronizarListaMensajesServicio: (
    where?: SifeSincronizarListaMensajesServicioSubscriptionWhereInput
  ) => SifeSincronizarListaMensajesServicioSubscriptionPayloadSubscription;
  sifeSincronizarListaProductosServicio: (
    where?: SifeSincronizarListaProductosServicioSubscriptionWhereInput
  ) => SifeSincronizarListaProductosServicioSubscriptionPayloadSubscription;
  sifeSincronizarParametricaEventosSignificativo: (
    where?: SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput
  ) => SifeSincronizarParametricaEventosSignificativoSubscriptionPayloadSubscription;
  sifeSincronizarParametricaMotivoAnulacion: (
    where?: SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput
  ) => SifeSincronizarParametricaMotivoAnulacionSubscriptionPayloadSubscription;
  sifeSincronizarParametricaPaisOrigen: (
    where?: SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput
  ) => SifeSincronizarParametricaPaisOrigenSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoAmbiente: (
    where?: SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoAmbienteSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoComponente: (
    where?: SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoComponenteSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoDepartamento: (
    where?: SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoDepartamentoSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoDocumentoFiscal: (
    where?: SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoDocumentoIdentidad: (
    where?: SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoDocumentoSector: (
    where?: SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoEmision: (
    where?: SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoEmisionSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoMetodoPago: (
    where?: SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoModalidad: (
    where?: SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoModalidadSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoMoneda: (
    where?: SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoMonedaSubscriptionPayloadSubscription;
  sifeSincronizarParametricaTipoPuntoVenta: (
    where?: SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput
  ) => SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayloadSubscription;
  sifeSincronizarParametricaUnidadMedida: (
    where?: SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput
  ) => SifeSincronizarParametricaUnidadMedidaSubscriptionPayloadSubscription;
}

export interface ClientConstructor<T> {
  new (options?: BaseClientOptions): T;
}

/**
 * Types
 */

export type SifeSincronizarParametricaTipoDocumentoFiscalOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarListaLeyendasFacturaOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoDepartamentoOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoPuntoVentaOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoComponenteOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaUnidadMedidaOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoAmbienteOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoModalidadOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaPaisOrigenOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "cuis_ASC"
  | "cuis_DESC"
  | "estado_ASC"
  | "estado_DESC"
  | "fechaSincronizacion_ASC"
  | "fechaSincronizacion_DESC"
  | "mensaje_ASC"
  | "mensaje_DESC"
  | "nit_ASC"
  | "nit_DESC"
  | "servicioWeb_ASC"
  | "servicioWeb_DESC";

export type SifeSincronizarActividadeOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoCaeb_ASC"
  | "codigoCaeb_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoDocumentoSectorOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export type SifeSincronizarListaMensajesServicioOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarListaProductosServicioOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoActividad_ASC"
  | "codigoActividad_DESC"
  | "codigoProducto_ASC"
  | "codigoProducto_DESC"
  | "descripcionProducto_ASC"
  | "descripcionProducto_DESC"
  | "fecha_ASC"
  | "fecha_DESC"
  | "nandina_ASC"
  | "nandina_DESC";

export type SifeSincronizarParametricaEventosSignificativoOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaMotivoAnulacionOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoMonedaOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoDocumentoIdentidadOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoEmisionOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarParametricaTipoMetodoPagoOrderByInput =
  | "id_ASC"
  | "id_DESC"
  | "codigoClasificador_ASC"
  | "codigoClasificador_DESC"
  | "descripcion_ASC"
  | "descripcion_DESC"
  | "fecha_ASC"
  | "fecha_DESC";

export type SifeSincronizarWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoDocumentoSectorUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaUnidadMedidaWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaWhereInput
  >;
}

export type SifeSincronizarParametricaTipoDocumentoFiscalWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarListaLeyendasFacturaWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarListaLeyendasFacturaWhereInput[]
    | SifeSincronizarListaLeyendasFacturaWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaLeyendasFacturaWhereInput[]
    | SifeSincronizarListaLeyendasFacturaWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaLeyendasFacturaWhereInput[]
    | SifeSincronizarListaLeyendasFacturaWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoPuntoVentaWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalWhereInput
  >;
}

export type SifeSincronizarListaMensajesServicioWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoDocumentoIdentidadUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaMensajesServicioWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarListaMensajesServicioWhereInput[]
    | SifeSincronizarListaMensajesServicioWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaMensajesServicioWhereInput[]
    | SifeSincronizarListaMensajesServicioWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaMensajesServicioWhereInput[]
    | SifeSincronizarListaMensajesServicioWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoMetodoPagoWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoDocumentoSectorWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionWhereInput
  >;
}

export type SifeSincronizarParametricaTipoDocumentoIdentidadWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoDocumentoFiscalWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoComponenteWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoComponenteSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoIdentidadWhereInput
  >;
}

export type SifeSincronizarParametricaEventosSignificativoWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoDocumentoFiscalCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaEventosSignificativoWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDepartamentoUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaEventosSignificativoWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput[]
    | SifeSincronizarParametricaEventosSignificativoSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDepartamentoUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaMensajesServicioSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarListaMensajesServicioWhereInput>;
  AND?: Maybe<
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput[]
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput[]
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput[]
    | SifeSincronizarListaMensajesServicioSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoDepartamentoCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarListaLeyendasFacturaWhereInput>;
  AND?: Maybe<
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput[]
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput[]
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput[]
    | SifeSincronizarListaLeyendasFacturaSubscriptionWhereInput
  >;
}

export type SifeSincronizarParametricaTipoDocumentoSectorWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarActividadeSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarActividadeWhereInput>;
  AND?: Maybe<
    | SifeSincronizarActividadeSubscriptionWhereInput[]
    | SifeSincronizarActividadeSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarActividadeSubscriptionWhereInput[]
    | SifeSincronizarActividadeSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarActividadeSubscriptionWhereInput[]
    | SifeSincronizarActividadeSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoComponenteUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaUnidadMedidaUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput[]
    | SifeSincronizarParametricaTipoDocumentoSectorWhereInput
  >;
}

export type SifeSincronizarParametricaPaisOrigenWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoComponenteUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaPaisOrigenWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaPaisOrigenWhereInput[]
    | SifeSincronizarParametricaPaisOrigenWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaPaisOrigenWhereInput[]
    | SifeSincronizarParametricaPaisOrigenWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaPaisOrigenWhereInput[]
    | SifeSincronizarParametricaPaisOrigenWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoComponenteCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoAmbienteUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoAmbienteUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoMonedaUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarParametricaTipoEmisionWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoMonedaUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoAmbienteCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoModalidadUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoEmisionWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoEmisionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoEmisionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoEmisionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionWhereInput
  >;
}

export type SifeSincronizarParametricaTipoComponenteWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaPaisOrigenUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoComponenteWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoComponenteWhereInput[]
    | SifeSincronizarParametricaTipoComponenteWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoComponenteWhereInput[]
    | SifeSincronizarParametricaTipoComponenteWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoComponenteWhereInput[]
    | SifeSincronizarParametricaTipoComponenteWhereInput
  >;
}

export interface SifeSincronizarParametricaPaisOrigenUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaPaisOrigenCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoEmisionUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarParametricaTipoMetodoPagoWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoEmisionUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput[]
    | SifeSincronizarParametricaTipoMetodoPagoWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoMonedaWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoMonedaSubscriptionWhereInput
  >;
}

export interface SifeSincronizarWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  cuis?: Maybe<String>;
  cuis_not?: Maybe<String>;
  cuis_in?: Maybe<String[] | String>;
  cuis_not_in?: Maybe<String[] | String>;
  cuis_lt?: Maybe<String>;
  cuis_lte?: Maybe<String>;
  cuis_gt?: Maybe<String>;
  cuis_gte?: Maybe<String>;
  cuis_contains?: Maybe<String>;
  cuis_not_contains?: Maybe<String>;
  cuis_starts_with?: Maybe<String>;
  cuis_not_starts_with?: Maybe<String>;
  cuis_ends_with?: Maybe<String>;
  cuis_not_ends_with?: Maybe<String>;
  estado?: Maybe<Int>;
  estado_not?: Maybe<Int>;
  estado_in?: Maybe<Int[] | Int>;
  estado_not_in?: Maybe<Int[] | Int>;
  estado_lt?: Maybe<Int>;
  estado_lte?: Maybe<Int>;
  estado_gt?: Maybe<Int>;
  estado_gte?: Maybe<Int>;
  fechaSincronizacion?: Maybe<DateTimeInput>;
  fechaSincronizacion_not?: Maybe<DateTimeInput>;
  fechaSincronizacion_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fechaSincronizacion_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fechaSincronizacion_lt?: Maybe<DateTimeInput>;
  fechaSincronizacion_lte?: Maybe<DateTimeInput>;
  fechaSincronizacion_gt?: Maybe<DateTimeInput>;
  fechaSincronizacion_gte?: Maybe<DateTimeInput>;
  mensaje?: Maybe<String>;
  mensaje_not?: Maybe<String>;
  mensaje_in?: Maybe<String[] | String>;
  mensaje_not_in?: Maybe<String[] | String>;
  mensaje_lt?: Maybe<String>;
  mensaje_lte?: Maybe<String>;
  mensaje_gt?: Maybe<String>;
  mensaje_gte?: Maybe<String>;
  mensaje_contains?: Maybe<String>;
  mensaje_not_contains?: Maybe<String>;
  mensaje_starts_with?: Maybe<String>;
  mensaje_not_starts_with?: Maybe<String>;
  mensaje_ends_with?: Maybe<String>;
  mensaje_not_ends_with?: Maybe<String>;
  nit?: Maybe<Int>;
  nit_not?: Maybe<Int>;
  nit_in?: Maybe<Int[] | Int>;
  nit_not_in?: Maybe<Int[] | Int>;
  nit_lt?: Maybe<Int>;
  nit_lte?: Maybe<Int>;
  nit_gt?: Maybe<Int>;
  nit_gte?: Maybe<Int>;
  servicioWeb?: Maybe<String>;
  servicioWeb_not?: Maybe<String>;
  servicioWeb_in?: Maybe<String[] | String>;
  servicioWeb_not_in?: Maybe<String[] | String>;
  servicioWeb_lt?: Maybe<String>;
  servicioWeb_lte?: Maybe<String>;
  servicioWeb_gt?: Maybe<String>;
  servicioWeb_gte?: Maybe<String>;
  servicioWeb_contains?: Maybe<String>;
  servicioWeb_not_contains?: Maybe<String>;
  servicioWeb_starts_with?: Maybe<String>;
  servicioWeb_not_starts_with?: Maybe<String>;
  servicioWeb_ends_with?: Maybe<String>;
  servicioWeb_not_ends_with?: Maybe<String>;
  AND?: Maybe<SifeSincronizarWhereInput[] | SifeSincronizarWhereInput>;
  OR?: Maybe<SifeSincronizarWhereInput[] | SifeSincronizarWhereInput>;
  NOT?: Maybe<SifeSincronizarWhereInput[] | SifeSincronizarWhereInput>;
}

export type SifeSincronizarListaLeyendasFacturaWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaMotivoAnulacionCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarListaProductosServicioWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaEventosSignificativoUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoDepartamentoWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaEventosSignificativoUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaPaisOrigenWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput[]
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput[]
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput[]
    | SifeSincronizarParametricaPaisOrigenSubscriptionWhereInput
  >;
}

export type SifeSincronizarParametricaTipoModalidadWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarListaProductosServicioSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarListaProductosServicioWhereInput>;
  AND?: Maybe<
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput[]
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput[]
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput[]
    | SifeSincronizarListaProductosServicioSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaEventosSignificativoCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoModalidadWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoModalidadWhereInput[]
    | SifeSincronizarParametricaTipoModalidadWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoModalidadWhereInput[]
    | SifeSincronizarParametricaTipoModalidadWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoModalidadWhereInput[]
    | SifeSincronizarParametricaTipoModalidadWhereInput
  >;
}

export interface SifeSincronizarParametricaUnidadMedidaUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaProductosServicioUpdateManyMutationInput {
  codigoActividad?: Maybe<Int>;
  codigoProducto?: Maybe<Int>;
  descripcionProducto?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  nandina?: Maybe<String>;
}

export interface SifeSincronizarActividadeWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoCaeb?: Maybe<Int>;
  codigoCaeb_not?: Maybe<Int>;
  codigoCaeb_in?: Maybe<Int[] | Int>;
  codigoCaeb_not_in?: Maybe<Int[] | Int>;
  codigoCaeb_lt?: Maybe<Int>;
  codigoCaeb_lte?: Maybe<Int>;
  codigoCaeb_gt?: Maybe<Int>;
  codigoCaeb_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    SifeSincronizarActividadeWhereInput[] | SifeSincronizarActividadeWhereInput
  >;
  OR?: Maybe<
    SifeSincronizarActividadeWhereInput[] | SifeSincronizarActividadeWhereInput
  >;
  NOT?: Maybe<
    SifeSincronizarActividadeWhereInput[] | SifeSincronizarActividadeWhereInput
  >;
}

export interface SifeSincronizarListaProductosServicioUpdateInput {
  codigoActividad?: Maybe<Int>;
  codigoProducto?: Maybe<Int>;
  descripcionProducto?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  nandina?: Maybe<String>;
}

export type SifeSincronizarParametricaTipoAmbienteWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarListaProductosServicioCreateInput {
  id?: Maybe<ID_Input>;
  codigoActividad?: Maybe<Int>;
  codigoProducto?: Maybe<Int>;
  descripcionProducto?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  nandina?: Maybe<String>;
}

export interface SifeSincronizarParametricaTipoMonedaCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaMensajesServicioUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoModalidadCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarParametricaTipoMonedaWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoMetodoPagoUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaMensajesServicioUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoDepartamentoWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoDepartamentoWhereInput[]
    | SifeSincronizarParametricaTipoDepartamentoWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoMonedaWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoMonedaWhereInput[]
    | SifeSincronizarParametricaTipoMonedaWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoMonedaWhereInput[]
    | SifeSincronizarParametricaTipoMonedaWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoMonedaWhereInput[]
    | SifeSincronizarParametricaTipoMonedaWhereInput
  >;
}

export interface SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaUnidadMedidaWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput[]
    | SifeSincronizarParametricaUnidadMedidaSubscriptionWhereInput
  >;
}

export interface SifeSincronizarListaMensajesServicioCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoEmisionWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoEmisionSubscriptionWhereInput
  >;
}

export interface SifeSincronizarListaLeyendasFacturaUpdateManyMutationInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoAmbienteWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteSubscriptionWhereInput
  >;
}

export interface SifeSincronizarListaLeyendasFacturaUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarParametricaMotivoAnulacionWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarListaLeyendasFacturaCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaUnidadMedidaCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarParametricaTipoPuntoVentaWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoAmbienteWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoAmbienteWhereInput[]
    | SifeSincronizarParametricaTipoAmbienteWhereInput
  >;
}

export interface SifeSincronizarActividadeUpdateManyMutationInput {
  codigoCaeb?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export type SifeSincronizarActividadeWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoPuntoVentaWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  codigoClasificador_not?: Maybe<Int>;
  codigoClasificador_in?: Maybe<Int[] | Int>;
  codigoClasificador_not_in?: Maybe<Int[] | Int>;
  codigoClasificador_lt?: Maybe<Int>;
  codigoClasificador_lte?: Maybe<Int>;
  codigoClasificador_gt?: Maybe<Int>;
  codigoClasificador_gte?: Maybe<Int>;
  descripcion?: Maybe<String>;
  descripcion_not?: Maybe<String>;
  descripcion_in?: Maybe<String[] | String>;
  descripcion_not_in?: Maybe<String[] | String>;
  descripcion_lt?: Maybe<String>;
  descripcion_lte?: Maybe<String>;
  descripcion_gt?: Maybe<String>;
  descripcion_gte?: Maybe<String>;
  descripcion_contains?: Maybe<String>;
  descripcion_not_contains?: Maybe<String>;
  descripcion_starts_with?: Maybe<String>;
  descripcion_not_starts_with?: Maybe<String>;
  descripcion_ends_with?: Maybe<String>;
  descripcion_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput[]
    | SifeSincronizarParametricaTipoPuntoVentaWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoEmisionCreateInput {
  id?: Maybe<ID_Input>;
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarActividadeUpdateInput {
  codigoCaeb?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarListaProductosServicioWhereInput {
  id?: Maybe<ID_Input>;
  id_not?: Maybe<ID_Input>;
  id_in?: Maybe<ID_Input[] | ID_Input>;
  id_not_in?: Maybe<ID_Input[] | ID_Input>;
  id_lt?: Maybe<ID_Input>;
  id_lte?: Maybe<ID_Input>;
  id_gt?: Maybe<ID_Input>;
  id_gte?: Maybe<ID_Input>;
  id_contains?: Maybe<ID_Input>;
  id_not_contains?: Maybe<ID_Input>;
  id_starts_with?: Maybe<ID_Input>;
  id_not_starts_with?: Maybe<ID_Input>;
  id_ends_with?: Maybe<ID_Input>;
  id_not_ends_with?: Maybe<ID_Input>;
  codigoActividad?: Maybe<Int>;
  codigoActividad_not?: Maybe<Int>;
  codigoActividad_in?: Maybe<Int[] | Int>;
  codigoActividad_not_in?: Maybe<Int[] | Int>;
  codigoActividad_lt?: Maybe<Int>;
  codigoActividad_lte?: Maybe<Int>;
  codigoActividad_gt?: Maybe<Int>;
  codigoActividad_gte?: Maybe<Int>;
  codigoProducto?: Maybe<Int>;
  codigoProducto_not?: Maybe<Int>;
  codigoProducto_in?: Maybe<Int[] | Int>;
  codigoProducto_not_in?: Maybe<Int[] | Int>;
  codigoProducto_lt?: Maybe<Int>;
  codigoProducto_lte?: Maybe<Int>;
  codigoProducto_gt?: Maybe<Int>;
  codigoProducto_gte?: Maybe<Int>;
  descripcionProducto?: Maybe<String>;
  descripcionProducto_not?: Maybe<String>;
  descripcionProducto_in?: Maybe<String[] | String>;
  descripcionProducto_not_in?: Maybe<String[] | String>;
  descripcionProducto_lt?: Maybe<String>;
  descripcionProducto_lte?: Maybe<String>;
  descripcionProducto_gt?: Maybe<String>;
  descripcionProducto_gte?: Maybe<String>;
  descripcionProducto_contains?: Maybe<String>;
  descripcionProducto_not_contains?: Maybe<String>;
  descripcionProducto_starts_with?: Maybe<String>;
  descripcionProducto_not_starts_with?: Maybe<String>;
  descripcionProducto_ends_with?: Maybe<String>;
  descripcionProducto_not_ends_with?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
  fecha_not?: Maybe<DateTimeInput>;
  fecha_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_not_in?: Maybe<DateTimeInput[] | DateTimeInput>;
  fecha_lt?: Maybe<DateTimeInput>;
  fecha_lte?: Maybe<DateTimeInput>;
  fecha_gt?: Maybe<DateTimeInput>;
  fecha_gte?: Maybe<DateTimeInput>;
  nandina?: Maybe<String>;
  nandina_not?: Maybe<String>;
  nandina_in?: Maybe<String[] | String>;
  nandina_not_in?: Maybe<String[] | String>;
  nandina_lt?: Maybe<String>;
  nandina_lte?: Maybe<String>;
  nandina_gt?: Maybe<String>;
  nandina_gte?: Maybe<String>;
  nandina_contains?: Maybe<String>;
  nandina_not_contains?: Maybe<String>;
  nandina_starts_with?: Maybe<String>;
  nandina_not_starts_with?: Maybe<String>;
  nandina_ends_with?: Maybe<String>;
  nandina_not_ends_with?: Maybe<String>;
  AND?: Maybe<
    | SifeSincronizarListaProductosServicioWhereInput[]
    | SifeSincronizarListaProductosServicioWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarListaProductosServicioWhereInput[]
    | SifeSincronizarListaProductosServicioWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarListaProductosServicioWhereInput[]
    | SifeSincronizarListaProductosServicioWhereInput
  >;
}

export interface SifeSincronizarActividadeCreateInput {
  id?: Maybe<ID_Input>;
  codigoCaeb?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarWhereInput>;
  AND?: Maybe<
    | SifeSincronizarSubscriptionWhereInput[]
    | SifeSincronizarSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarSubscriptionWhereInput[]
    | SifeSincronizarSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarSubscriptionWhereInput[]
    | SifeSincronizarSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoModalidadUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarCreateInput {
  id?: Maybe<ID_Input>;
  cuis?: Maybe<String>;
  estado?: Maybe<Int>;
  fechaSincronizacion?: Maybe<DateTimeInput>;
  mensaje?: Maybe<String>;
  nit?: Maybe<Int>;
  servicioWeb?: Maybe<String>;
}

export type SifeSincronizarParametricaUnidadMedidaWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarUpdateInput {
  cuis?: Maybe<String>;
  estado?: Maybe<Int>;
  fechaSincronizacion?: Maybe<DateTimeInput>;
  mensaje?: Maybe<String>;
  nit?: Maybe<Int>;
  servicioWeb?: Maybe<String>;
}

export interface SifeSincronizarUpdateManyMutationInput {
  cuis?: Maybe<String>;
  estado?: Maybe<Int>;
  fechaSincronizacion?: Maybe<DateTimeInput>;
  mensaje?: Maybe<String>;
  nit?: Maybe<Int>;
  servicioWeb?: Maybe<String>;
}

export type SifeSincronizarParametricaTipoDepartamentoWhereUniqueInput = AtLeastOne<{
  id: Maybe<ID_Input>;
}>;

export interface SifeSincronizarParametricaTipoPuntoVentaUpdateInput {
  codigoClasificador?: Maybe<Int>;
  descripcion?: Maybe<String>;
  fecha?: Maybe<DateTimeInput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaMotivoAnulacionWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput[]
    | SifeSincronizarParametricaMotivoAnulacionSubscriptionWhereInput
  >;
}

export interface SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput {
  mutation_in?: Maybe<MutationType[] | MutationType>;
  updatedFields_contains?: Maybe<String>;
  updatedFields_contains_every?: Maybe<String[] | String>;
  updatedFields_contains_some?: Maybe<String[] | String>;
  node?: Maybe<SifeSincronizarParametricaTipoModalidadWhereInput>;
  AND?: Maybe<
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput
  >;
  OR?: Maybe<
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput
  >;
  NOT?: Maybe<
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput[]
    | SifeSincronizarParametricaTipoModalidadSubscriptionWhereInput
  >;
}

export interface NodeNode {
  id: ID_Output;
}

export interface SifeSincronizarParametricaPaisOrigen {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaPaisOrigenPromise
  extends Promise<SifeSincronizarParametricaPaisOrigen>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaPaisOrigenSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaPaisOrigen>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaPaisOrigenNullablePromise
  extends Promise<SifeSincronizarParametricaPaisOrigen | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaUnidadMedidaPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaUnidadMedidaPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaUnidadMedidaPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaUnidadMedidaPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaUnidadMedidaPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface AggregateSifeSincronizarParametricaMotivoAnulacion {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaMotivoAnulacionPromise
  extends Promise<AggregateSifeSincronizarParametricaMotivoAnulacion>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaMotivoAnulacionSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaMotivoAnulacion>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaUnidadMedidaEdge {
  node: SifeSincronizarParametricaUnidadMedida;
  cursor: String;
}

export interface SifeSincronizarParametricaUnidadMedidaEdgePromise
  extends Promise<SifeSincronizarParametricaUnidadMedidaEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaUnidadMedidaPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaUnidadMedidaEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaUnidadMedidaEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaUnidadMedidaSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaMotivoAnulacionEdge {
  node: SifeSincronizarParametricaMotivoAnulacion;
  cursor: String;
}

export interface SifeSincronizarParametricaMotivoAnulacionEdgePromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacionEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaMotivoAnulacionPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaMotivoAnulacionEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaMotivoAnulacionEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaMotivoAnulacionSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarListaLeyendasFactura {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarListaLeyendasFacturaPromise
  extends Promise<SifeSincronizarListaLeyendasFactura>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarListaLeyendasFacturaSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaLeyendasFactura>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarListaLeyendasFacturaNullablePromise
  extends Promise<SifeSincronizarListaLeyendasFactura | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaMotivoAnulacionEdge[];
}

export interface SifeSincronizarParametricaMotivoAnulacionConnectionPromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacionConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaMotivoAnulacionEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaMotivoAnulacionPromise
  >() => T;
}

export interface SifeSincronizarParametricaMotivoAnulacionConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaMotivoAnulacionConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaMotivoAnulacionEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaMotivoAnulacionSubscription
  >() => T;
}

export interface AggregateSifeSincronizarParametricaTipoPuntoVenta {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoPuntoVentaPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoPuntoVenta>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoPuntoVentaSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoPuntoVenta>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizar {
  id: ID_Output;
  cuis?: String;
  estado?: Int;
  fechaSincronizacion?: DateTimeOutput;
  mensaje?: String;
  nit?: Int;
  servicioWeb?: String;
}

export interface SifeSincronizarPromise
  extends Promise<SifeSincronizar>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  cuis: () => Promise<String>;
  estado: () => Promise<Int>;
  fechaSincronizacion: () => Promise<DateTimeOutput>;
  mensaje: () => Promise<String>;
  nit: () => Promise<Int>;
  servicioWeb: () => Promise<String>;
}

export interface SifeSincronizarSubscription
  extends Promise<AsyncIterator<SifeSincronizar>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  cuis: () => Promise<AsyncIterator<String>>;
  estado: () => Promise<AsyncIterator<Int>>;
  fechaSincronizacion: () => Promise<AsyncIterator<DateTimeOutput>>;
  mensaje: () => Promise<AsyncIterator<String>>;
  nit: () => Promise<AsyncIterator<Int>>;
  servicioWeb: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarNullablePromise
  extends Promise<SifeSincronizar | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  cuis: () => Promise<String>;
  estado: () => Promise<Int>;
  fechaSincronizacion: () => Promise<DateTimeOutput>;
  mensaje: () => Promise<String>;
  nit: () => Promise<Int>;
  servicioWeb: () => Promise<String>;
}

export interface BatchPayload {
  count: Long;
}

export interface BatchPayloadPromise
  extends Promise<BatchPayload>,
    Fragmentable {
  count: () => Promise<Long>;
}

export interface BatchPayloadSubscription
  extends Promise<AsyncIterator<BatchPayload>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Long>>;
}

export interface SifeSincronizarSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizar;
  updatedFields: String[];
  previousValues: SifeSincronizarPreviousValues;
}

export interface SifeSincronizarSubscriptionPayloadPromise
  extends Promise<SifeSincronizarSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = SifeSincronizarPreviousValuesPromise>() => T;
}

export interface SifeSincronizarSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<SifeSincronizarSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = SifeSincronizarPreviousValuesSubscription>() => T;
}

export interface SifeSincronizarParametricaTipoPuntoVentaConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoPuntoVentaEdge[];
}

export interface SifeSincronizarParametricaTipoPuntoVentaConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVentaConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoPuntoVentaEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoPuntoVentaPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoPuntoVentaConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoPuntoVentaConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoPuntoVentaEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoPuntoVentaSubscription
  >() => T;
}

export interface SifeSincronizarPreviousValues {
  id: ID_Output;
  cuis?: String;
  estado?: Int;
  fechaSincronizacion?: DateTimeOutput;
  mensaje?: String;
  nit?: Int;
  servicioWeb?: String;
}

export interface SifeSincronizarPreviousValuesPromise
  extends Promise<SifeSincronizarPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  cuis: () => Promise<String>;
  estado: () => Promise<Int>;
  fechaSincronizacion: () => Promise<DateTimeOutput>;
  mensaje: () => Promise<String>;
  nit: () => Promise<Int>;
  servicioWeb: () => Promise<String>;
}

export interface SifeSincronizarPreviousValuesSubscription
  extends Promise<AsyncIterator<SifeSincronizarPreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  cuis: () => Promise<AsyncIterator<String>>;
  estado: () => Promise<AsyncIterator<Int>>;
  fechaSincronizacion: () => Promise<AsyncIterator<DateTimeOutput>>;
  mensaje: () => Promise<AsyncIterator<String>>;
  nit: () => Promise<AsyncIterator<Int>>;
  servicioWeb: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoPuntoVenta {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoPuntoVentaPromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVenta>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoPuntoVenta>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaNullablePromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVenta | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarActividadeConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarActividadeEdge[];
}

export interface SifeSincronizarActividadeConnectionPromise
  extends Promise<SifeSincronizarActividadeConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<SifeSincronizarActividadeEdge>>() => T;
  aggregate: <T = AggregateSifeSincronizarActividadePromise>() => T;
}

export interface SifeSincronizarActividadeConnectionSubscription
  extends Promise<AsyncIterator<SifeSincronizarActividadeConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<AsyncIterator<SifeSincronizarActividadeEdgeSubscription>>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarActividadeSubscription>() => T;
}

export interface SifeSincronizarParametricaTipoMonedaEdge {
  node: SifeSincronizarParametricaTipoMoneda;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoMonedaEdgePromise
  extends Promise<SifeSincronizarParametricaTipoMonedaEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoMonedaPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoMonedaEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoMonedaEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoMonedaSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateSifeSincronizarParametricaTipoMoneda {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoMonedaPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoMoneda>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoMonedaSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizarParametricaTipoMoneda>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarListaLeyendasFacturaEdge {
  node: SifeSincronizarListaLeyendasFactura;
  cursor: String;
}

export interface SifeSincronizarListaLeyendasFacturaEdgePromise
  extends Promise<SifeSincronizarListaLeyendasFacturaEdge>,
    Fragmentable {
  node: <T = SifeSincronizarListaLeyendasFacturaPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarListaLeyendasFacturaEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaLeyendasFacturaEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarListaLeyendasFacturaSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoMonedaConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoMonedaEdge[];
}

export interface SifeSincronizarParametricaTipoMonedaConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoMonedaConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoMonedaEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarParametricaTipoMonedaPromise>() => T;
}

export interface SifeSincronizarParametricaTipoMonedaConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMonedaConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMonedaEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoMonedaSubscription
  >() => T;
}

export interface SifeSincronizarActividadeSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarActividade;
  updatedFields: String[];
  previousValues: SifeSincronizarActividadePreviousValues;
}

export interface SifeSincronizarActividadeSubscriptionPayloadPromise
  extends Promise<SifeSincronizarActividadeSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarActividadePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = SifeSincronizarActividadePreviousValuesPromise>() => T;
}

export interface SifeSincronizarActividadeSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<SifeSincronizarActividadeSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarActividadeSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarActividadePreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoMoneda {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoMonedaPromise
  extends Promise<SifeSincronizarParametricaTipoMoneda>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoMonedaSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoMoneda>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoMonedaNullablePromise
  extends Promise<SifeSincronizarParametricaTipoMoneda | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoModalidadEdge {
  node: SifeSincronizarParametricaTipoModalidad;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoModalidadEdgePromise
  extends Promise<SifeSincronizarParametricaTipoModalidadEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoModalidadPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoModalidadEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoModalidadEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoModalidadSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarActividadePreviousValues {
  id: ID_Output;
  codigoCaeb?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarActividadePreviousValuesPromise
  extends Promise<SifeSincronizarActividadePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoCaeb: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarActividadePreviousValuesSubscription
  extends Promise<AsyncIterator<SifeSincronizarActividadePreviousValues>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoCaeb: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaUnidadMedidaSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaUnidadMedida;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaUnidadMedidaPreviousValues;
}

export interface SifeSincronizarParametricaUnidadMedidaSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaUnidadMedidaSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaUnidadMedidaPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaUnidadMedidaPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaUnidadMedidaSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaUnidadMedidaSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaUnidadMedidaSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaUnidadMedidaPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaMotivoAnulacion {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaMotivoAnulacionPromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacion>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaMotivoAnulacion>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaMotivoAnulacionNullablePromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacion | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface AggregateSifeSincronizarParametricaTipoMetodoPago {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoMetodoPagoPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoMetodoPago>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoMetodoPagoSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoMetodoPago>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarListaLeyendasFacturaSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarListaLeyendasFactura;
  updatedFields: String[];
  previousValues: SifeSincronizarListaLeyendasFacturaPreviousValues;
}

export interface SifeSincronizarListaLeyendasFacturaSubscriptionPayloadPromise
  extends Promise<SifeSincronizarListaLeyendasFacturaSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarListaLeyendasFacturaPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarListaLeyendasFacturaPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarListaLeyendasFacturaSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaLeyendasFacturaSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarListaLeyendasFacturaSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarListaLeyendasFacturaPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoMetodoPagoConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoMetodoPagoEdge[];
}

export interface SifeSincronizarParametricaTipoMetodoPagoConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPagoConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoMetodoPagoEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoMetodoPagoPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoMetodoPagoConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMetodoPagoConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMetodoPagoEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoMetodoPagoSubscription
  >() => T;
}

export interface SifeSincronizarListaLeyendasFacturaPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarListaLeyendasFacturaPreviousValuesPromise
  extends Promise<SifeSincronizarListaLeyendasFacturaPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarListaLeyendasFacturaPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaLeyendasFacturaPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface AggregateSifeSincronizarParametricaTipoEmision {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoEmisionPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoEmision>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoEmisionSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoEmision>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface AggregateSifeSincronizarParametricaEventosSignificativo {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaEventosSignificativoPromise
  extends Promise<AggregateSifeSincronizarParametricaEventosSignificativo>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaEventosSignificativoSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaEventosSignificativo>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoEmisionConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoEmisionEdge[];
}

export interface SifeSincronizarParametricaTipoEmisionConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoEmisionConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoEmisionEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarParametricaTipoEmisionPromise>() => T;
}

export interface SifeSincronizarParametricaTipoEmisionConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoEmisionConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoEmisionEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoEmisionSubscription
  >() => T;
}

export interface SifeSincronizarListaMensajesServicioSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarListaMensajesServicio;
  updatedFields: String[];
  previousValues: SifeSincronizarListaMensajesServicioPreviousValues;
}

export interface SifeSincronizarListaMensajesServicioSubscriptionPayloadPromise
  extends Promise<SifeSincronizarListaMensajesServicioSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarListaMensajesServicioPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarListaMensajesServicioPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarListaMensajesServicioSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaMensajesServicioSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarListaMensajesServicioSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarListaMensajesServicioPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoEmision {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoEmisionPromise
  extends Promise<SifeSincronizarParametricaTipoEmision>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoEmisionSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoEmision>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoEmisionNullablePromise
  extends Promise<SifeSincronizarParametricaTipoEmision | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarListaMensajesServicioPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarListaMensajesServicioPreviousValuesPromise
  extends Promise<SifeSincronizarListaMensajesServicioPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarListaMensajesServicioPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaMensajesServicioPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorEdge {
  node: SifeSincronizarParametricaTipoDocumentoSector;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorEdgePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoSectorEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDocumentoSectorPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorEdgeSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoSectorEdge>
    >,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDocumentoSectorSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaEventosSignificativoEdge {
  node: SifeSincronizarParametricaEventosSignificativo;
  cursor: String;
}

export interface SifeSincronizarParametricaEventosSignificativoEdgePromise
  extends Promise<SifeSincronizarParametricaEventosSignificativoEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaEventosSignificativoPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaEventosSignificativoEdgeSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaEventosSignificativoEdge>
    >,
    Fragmentable {
  node: <T = SifeSincronizarParametricaEventosSignificativoSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface PageInfo {
  hasNextPage: Boolean;
  hasPreviousPage: Boolean;
  startCursor?: String;
  endCursor?: String;
}

export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {
  hasNextPage: () => Promise<Boolean>;
  hasPreviousPage: () => Promise<Boolean>;
  startCursor: () => Promise<String>;
  endCursor: () => Promise<String>;
}

export interface PageInfoSubscription
  extends Promise<AsyncIterator<PageInfo>>,
    Fragmentable {
  hasNextPage: () => Promise<AsyncIterator<Boolean>>;
  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;
  startCursor: () => Promise<AsyncIterator<String>>;
  endCursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarListaProductosServicioSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarListaProductosServicio;
  updatedFields: String[];
  previousValues: SifeSincronizarListaProductosServicioPreviousValues;
}

export interface SifeSincronizarListaProductosServicioSubscriptionPayloadPromise
  extends Promise<SifeSincronizarListaProductosServicioSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarListaProductosServicioPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarListaProductosServicioPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarListaProductosServicioSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaProductosServicioSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarListaProductosServicioSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarListaProductosServicioPreviousValuesSubscription
  >() => T;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoIdentidad {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoIdentidadPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoDocumentoIdentidad>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoIdentidadSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoDocumentoIdentidad>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarListaProductosServicioPreviousValues {
  id: ID_Output;
  codigoActividad?: Int;
  codigoProducto?: Int;
  descripcionProducto?: String;
  fecha?: DateTimeOutput;
  nandina?: String;
}

export interface SifeSincronizarListaProductosServicioPreviousValuesPromise
  extends Promise<SifeSincronizarListaProductosServicioPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoActividad: () => Promise<Int>;
  codigoProducto: () => Promise<Int>;
  descripcionProducto: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
  nandina: () => Promise<String>;
}

export interface SifeSincronizarListaProductosServicioPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaProductosServicioPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoActividad: () => Promise<AsyncIterator<Int>>;
  codigoProducto: () => Promise<AsyncIterator<Int>>;
  descripcionProducto: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
  nandina: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoDocumentoIdentidadEdge[];
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoIdentidadConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoDocumentoIdentidadEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoIdentidadPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoIdentidadConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoIdentidadEdgeSubscription
      >
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoIdentidadSubscription
  >() => T;
}

export interface SifeSincronizarParametricaEventosSignificativoConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaEventosSignificativoEdge[];
}

export interface SifeSincronizarParametricaEventosSignificativoConnectionPromise
  extends Promise<SifeSincronizarParametricaEventosSignificativoConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaEventosSignificativoEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaEventosSignificativoPromise
  >() => T;
}

export interface SifeSincronizarParametricaEventosSignificativoConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaEventosSignificativoConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<
        SifeSincronizarParametricaEventosSignificativoEdgeSubscription
      >
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaEventosSignificativoSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidad {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoIdentidad>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoIdentidad>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadNullablePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoIdentidad | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaEventosSignificativoSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaEventosSignificativo;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaEventosSignificativoPreviousValues;
}

export interface SifeSincronizarParametricaEventosSignificativoSubscriptionPayloadPromise
  extends Promise<
      SifeSincronizarParametricaEventosSignificativoSubscriptionPayload
    >,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaEventosSignificativoPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaEventosSignificativoPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaEventosSignificativoSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaEventosSignificativoSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaEventosSignificativoSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaEventosSignificativoPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalEdge {
  node: SifeSincronizarParametricaTipoDocumentoFiscal;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalEdgePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoFiscalEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDocumentoFiscalPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalEdgeSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoFiscalEdge>
    >,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDocumentoFiscalSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaEventosSignificativoPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaEventosSignificativoPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaEventosSignificativoPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaEventosSignificativoPreviousValuesSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaEventosSignificativoPreviousValues
      >
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarEdge {
  node: SifeSincronizar;
  cursor: String;
}

export interface SifeSincronizarEdgePromise
  extends Promise<SifeSincronizarEdge>,
    Fragmentable {
  node: <T = SifeSincronizarPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarActividadeEdge {
  node: SifeSincronizarActividade;
  cursor: String;
}

export interface SifeSincronizarActividadeEdgePromise
  extends Promise<SifeSincronizarActividadeEdge>,
    Fragmentable {
  node: <T = SifeSincronizarActividadePromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarActividadeEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarActividadeEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarActividadeSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateSifeSincronizarParametricaTipoDepartamento {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoDepartamentoPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoDepartamento>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoDepartamentoSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoDepartamento>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaMotivoAnulacionSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaMotivoAnulacion;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaMotivoAnulacionPreviousValues;
}

export interface SifeSincronizarParametricaMotivoAnulacionSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacionSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaMotivoAnulacionPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaMotivoAnulacionPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaMotivoAnulacionSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaMotivoAnulacionSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaMotivoAnulacionSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaMotivoAnulacionPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDepartamentoConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoDepartamentoEdge[];
}

export interface SifeSincronizarParametricaTipoDepartamentoConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoDepartamentoConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoDepartamentoEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDepartamentoPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDepartamentoConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDepartamentoConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDepartamentoEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDepartamentoSubscription
  >() => T;
}

export interface SifeSincronizarParametricaMotivoAnulacionPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaMotivoAnulacionPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaMotivoAnulacionPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaMotivoAnulacionPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaMotivoAnulacionPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDepartamento {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDepartamentoPromise
  extends Promise<SifeSincronizarParametricaTipoDepartamento>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDepartamentoSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoDepartamento>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDepartamentoNullablePromise
  extends Promise<SifeSincronizarParametricaTipoDepartamento | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaEventosSignificativo {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaEventosSignificativoPromise
  extends Promise<SifeSincronizarParametricaEventosSignificativo>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaEventosSignificativoSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaEventosSignificativo>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaEventosSignificativoNullablePromise
  extends Promise<SifeSincronizarParametricaEventosSignificativo | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoComponenteEdge {
  node: SifeSincronizarParametricaTipoComponente;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoComponenteEdgePromise
  extends Promise<SifeSincronizarParametricaTipoComponenteEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoComponentePromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoComponenteEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoComponenteEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoComponenteSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaPaisOrigenSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaPaisOrigen;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaPaisOrigenPreviousValues;
}

export interface SifeSincronizarParametricaPaisOrigenSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaPaisOrigenSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaPaisOrigenPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaPaisOrigenPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaPaisOrigenSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaPaisOrigenSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaPaisOrigenSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaPaisOrigenPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoComponente {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoComponentePromise
  extends Promise<SifeSincronizarParametricaTipoComponente>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoComponenteSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoComponente>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoComponenteNullablePromise
  extends Promise<SifeSincronizarParametricaTipoComponente | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaPaisOrigenPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaPaisOrigenPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaPaisOrigenPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaPaisOrigenPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaPaisOrigenPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoAmbienteEdge {
  node: SifeSincronizarParametricaTipoAmbiente;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoAmbienteEdgePromise
  extends Promise<SifeSincronizarParametricaTipoAmbienteEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoAmbientePromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoAmbienteEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoAmbienteEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoAmbienteSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateSifeSincronizarListaProductosServicio {
  count: Int;
}

export interface AggregateSifeSincronizarListaProductosServicioPromise
  extends Promise<AggregateSifeSincronizarListaProductosServicio>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarListaProductosServicioSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarListaProductosServicio>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarActividade {
  id: ID_Output;
  codigoCaeb?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarActividadePromise
  extends Promise<SifeSincronizarActividade>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoCaeb: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarActividadeSubscription
  extends Promise<AsyncIterator<SifeSincronizarActividade>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoCaeb: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarActividadeNullablePromise
  extends Promise<SifeSincronizarActividade | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoCaeb: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoAmbienteSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoAmbiente;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoAmbientePreviousValues;
}

export interface SifeSincronizarParametricaTipoAmbienteSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoAmbienteSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoAmbientePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoAmbientePreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoAmbienteSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoAmbienteSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoAmbienteSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoAmbientePreviousValuesSubscription
  >() => T;
}

export interface AggregateSifeSincronizarParametricaPaisOrigen {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaPaisOrigenPromise
  extends Promise<AggregateSifeSincronizarParametricaPaisOrigen>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaPaisOrigenSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizarParametricaPaisOrigen>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoAmbientePreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoAmbientePreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoAmbientePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoAmbientePreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoAmbientePreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaPaisOrigenConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaPaisOrigenEdge[];
}

export interface SifeSincronizarParametricaPaisOrigenConnectionPromise
  extends Promise<SifeSincronizarParametricaPaisOrigenConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaPaisOrigenEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarParametricaPaisOrigenPromise>() => T;
}

export interface SifeSincronizarParametricaPaisOrigenConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaPaisOrigenConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaPaisOrigenEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaPaisOrigenSubscription
  >() => T;
}

export interface SifeSincronizarListaProductosServicioEdge {
  node: SifeSincronizarListaProductosServicio;
  cursor: String;
}

export interface SifeSincronizarListaProductosServicioEdgePromise
  extends Promise<SifeSincronizarListaProductosServicioEdge>,
    Fragmentable {
  node: <T = SifeSincronizarListaProductosServicioPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarListaProductosServicioEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaProductosServicioEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarListaProductosServicioSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateSifeSincronizarParametricaUnidadMedida {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaUnidadMedidaPromise
  extends Promise<AggregateSifeSincronizarParametricaUnidadMedida>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaUnidadMedidaSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaUnidadMedida>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoComponenteSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoComponente;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoComponentePreviousValues;
}

export interface SifeSincronizarParametricaTipoComponenteSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoComponenteSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoComponentePromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoComponentePreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoComponenteSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoComponenteSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoComponenteSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoComponentePreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoPuntoVentaEdge {
  node: SifeSincronizarParametricaTipoPuntoVenta;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoPuntoVentaEdgePromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVentaEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoPuntoVentaPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoPuntoVentaEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoPuntoVentaSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoComponentePreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoComponentePreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoComponentePreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoComponentePreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoComponentePreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoPuntoVenta;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoPuntoVentaPreviousValues;
}

export interface SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoPuntoVentaPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoPuntoVentaPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoPuntoVentaSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoPuntoVentaSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoPuntoVentaPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarListaProductosServicioConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarListaProductosServicioEdge[];
}

export interface SifeSincronizarListaProductosServicioConnectionPromise
  extends Promise<SifeSincronizarListaProductosServicioConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarListaProductosServicioEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarListaProductosServicioPromise>() => T;
}

export interface SifeSincronizarListaProductosServicioConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaProductosServicioConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarListaProductosServicioEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarListaProductosServicioSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoModalidadConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoModalidadEdge[];
}

export interface SifeSincronizarParametricaTipoModalidadConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoModalidadConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoModalidadEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoModalidadPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoModalidadConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoModalidadConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoModalidadEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoModalidadSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDepartamentoSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoDepartamento;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoDepartamentoPreviousValues;
}

export interface SifeSincronizarParametricaTipoDepartamentoSubscriptionPayloadPromise
  extends Promise<
      SifeSincronizarParametricaTipoDepartamentoSubscriptionPayload
    >,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoDepartamentoPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDepartamentoPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDepartamentoSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDepartamentoSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoDepartamentoSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDepartamentoPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoMetodoPagoEdge {
  node: SifeSincronizarParametricaTipoMetodoPago;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoMetodoPagoEdgePromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPagoEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoMetodoPagoPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoMetodoPagoEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoMetodoPagoSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoDepartamentoPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDepartamentoPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoDepartamentoPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDepartamentoPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDepartamentoPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoEmisionEdge {
  node: SifeSincronizarParametricaTipoEmision;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoEmisionEdgePromise
  extends Promise<SifeSincronizarParametricaTipoEmisionEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoEmisionPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoEmisionEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoEmisionEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoEmisionSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateSifeSincronizarActividade {
  count: Int;
}

export interface AggregateSifeSincronizarActividadePromise
  extends Promise<AggregateSifeSincronizarActividade>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarActividadeSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizarActividade>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoSector {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoSectorPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoDocumentoSector>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoSectorSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoDocumentoSector>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoDocumentoFiscal;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoDocumentoFiscalPreviousValues;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayloadPromise
  extends Promise<
      SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayload
    >,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoDocumentoFiscalPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoFiscalPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoFiscalSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoDocumentoFiscalSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoFiscalPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoSector {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoSector>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoDocumentoSector>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorNullablePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoSector | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoFiscalPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoFiscalPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarListaLeyendasFacturaConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarListaLeyendasFacturaEdge[];
}

export interface SifeSincronizarListaLeyendasFacturaConnectionPromise
  extends Promise<SifeSincronizarListaLeyendasFacturaConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarListaLeyendasFacturaEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarListaLeyendasFacturaPromise>() => T;
}

export interface SifeSincronizarListaLeyendasFacturaConnectionSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaLeyendasFacturaConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarListaLeyendasFacturaEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarListaLeyendasFacturaSubscription
  >() => T;
}

export interface SifeSincronizarListaProductosServicio {
  id: ID_Output;
  codigoActividad?: Int;
  codigoProducto?: Int;
  descripcionProducto?: String;
  fecha?: DateTimeOutput;
  nandina?: String;
}

export interface SifeSincronizarListaProductosServicioPromise
  extends Promise<SifeSincronizarListaProductosServicio>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoActividad: () => Promise<Int>;
  codigoProducto: () => Promise<Int>;
  descripcionProducto: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
  nandina: () => Promise<String>;
}

export interface SifeSincronizarListaProductosServicioSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaProductosServicio>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoActividad: () => Promise<AsyncIterator<Int>>;
  codigoProducto: () => Promise<AsyncIterator<Int>>;
  descripcionProducto: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
  nandina: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarListaProductosServicioNullablePromise
  extends Promise<SifeSincronizarListaProductosServicio | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoActividad: () => Promise<Int>;
  codigoProducto: () => Promise<Int>;
  descripcionProducto: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
  nandina: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoDocumentoFiscalEdge[];
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoFiscalConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoDocumentoFiscalEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoFiscalPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoFiscalConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoFiscalEdgeSubscription
      >
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoFiscalSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoDocumentoIdentidad;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValues;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayloadPromise
  extends Promise<
      SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayload
    >,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoDocumentoIdentidadPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoIdentidadSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <
    T = SifeSincronizarParametricaTipoDocumentoIdentidadSubscription
  >() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDepartamentoEdge {
  node: SifeSincronizarParametricaTipoDepartamento;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoDepartamentoEdgePromise
  extends Promise<SifeSincronizarParametricaTipoDepartamentoEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDepartamentoPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoDepartamentoEdgeSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDepartamentoEdge>
    >,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDepartamentoSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValuesPromise
  extends Promise<
      SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValues
    >,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValuesSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoIdentidadPreviousValues
      >
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface AggregateSifeSincronizarParametricaTipoComponente {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoComponentePromise
  extends Promise<AggregateSifeSincronizarParametricaTipoComponente>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoComponenteSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoComponente>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface AggregateSifeSincronizarListaMensajesServicio {
  count: Int;
}

export interface AggregateSifeSincronizarListaMensajesServicioPromise
  extends Promise<AggregateSifeSincronizarListaMensajesServicio>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarListaMensajesServicioSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizarListaMensajesServicio>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface AggregateSifeSincronizarParametricaTipoAmbiente {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoAmbientePromise
  extends Promise<AggregateSifeSincronizarParametricaTipoAmbiente>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoAmbienteSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoAmbiente>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoDocumentoSector;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoDocumentoSectorPreviousValues;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayloadPromise
  extends Promise<
      SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayload
    >,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoDocumentoSectorPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoSectorPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoSectorSubscriptionPayload
      >
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoDocumentoSectorSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoDocumentoSectorPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoAmbiente {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoAmbientePromise
  extends Promise<SifeSincronizarParametricaTipoAmbiente>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoAmbienteSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoAmbiente>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoAmbienteNullablePromise
  extends Promise<SifeSincronizarParametricaTipoAmbiente | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoSectorPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoSectorPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaUnidadMedidaConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaUnidadMedidaEdge[];
}

export interface SifeSincronizarParametricaUnidadMedidaConnectionPromise
  extends Promise<SifeSincronizarParametricaUnidadMedidaConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaUnidadMedidaEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaUnidadMedidaPromise
  >() => T;
}

export interface SifeSincronizarParametricaUnidadMedidaConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaUnidadMedidaConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaUnidadMedidaEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaUnidadMedidaSubscription
  >() => T;
}

export interface SifeSincronizarListaMensajesServicioEdge {
  node: SifeSincronizarListaMensajesServicio;
  cursor: String;
}

export interface SifeSincronizarListaMensajesServicioEdgePromise
  extends Promise<SifeSincronizarListaMensajesServicioEdge>,
    Fragmentable {
  node: <T = SifeSincronizarListaMensajesServicioPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarListaMensajesServicioEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaMensajesServicioEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarListaMensajesServicioSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoPuntoVentaPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoPuntoVentaPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoPuntoVentaPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoPuntoVentaPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoEmisionSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoEmision;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoEmisionPreviousValues;
}

export interface SifeSincronizarParametricaTipoEmisionSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoEmisionSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoEmisionPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoEmisionPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoEmisionSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoEmisionSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoEmisionSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoEmisionPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoModalidad {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoModalidadPromise
  extends Promise<SifeSincronizarParametricaTipoModalidad>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoModalidadSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoModalidad>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoModalidadNullablePromise
  extends Promise<SifeSincronizarParametricaTipoModalidad | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoEmisionPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoEmisionPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoEmisionPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoEmisionPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoEmisionPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarEdge[];
}

export interface SifeSincronizarConnectionPromise
  extends Promise<SifeSincronizarConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<SifeSincronizarEdge>>() => T;
  aggregate: <T = AggregateSifeSincronizarPromise>() => T;
}

export interface SifeSincronizarConnectionSubscription
  extends Promise<AsyncIterator<SifeSincronizarConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<SifeSincronizarEdgeSubscription>>>() => T;
  aggregate: <T = AggregateSifeSincronizarSubscription>() => T;
}

export interface SifeSincronizarListaMensajesServicioConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarListaMensajesServicioEdge[];
}

export interface SifeSincronizarListaMensajesServicioConnectionPromise
  extends Promise<SifeSincronizarListaMensajesServicioConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarListaMensajesServicioEdge>
  >() => T;
  aggregate: <T = AggregateSifeSincronizarListaMensajesServicioPromise>() => T;
}

export interface SifeSincronizarListaMensajesServicioConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarListaMensajesServicioConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarListaMensajesServicioEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarListaMensajesServicioSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadEdge {
  node: SifeSincronizarParametricaTipoDocumentoIdentidad;
  cursor: String;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadEdgePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoIdentidadEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaTipoDocumentoIdentidadPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaTipoDocumentoIdentidadEdgeSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoIdentidadEdge>
    >,
    Fragmentable {
  node: <
    T = SifeSincronizarParametricaTipoDocumentoIdentidadSubscription
  >() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoMetodoPago;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoMetodoPagoPreviousValues;
}

export interface SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoMetodoPagoPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoMetodoPagoPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMetodoPagoSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoMetodoPagoSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoMetodoPagoPreviousValuesSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscal {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoFiscal>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoDocumentoFiscal>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoDocumentoFiscalNullablePromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoFiscal | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoMetodoPagoPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPagoPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMetodoPagoPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoComponenteConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoComponenteEdge[];
}

export interface SifeSincronizarParametricaTipoComponenteConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoComponenteConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoComponenteEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoComponentePromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoComponenteConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoComponenteConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoComponenteEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoComponenteSubscription
  >() => T;
}

export interface SifeSincronizarListaMensajesServicio {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarListaMensajesServicioPromise
  extends Promise<SifeSincronizarListaMensajesServicio>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarListaMensajesServicioSubscription
  extends Promise<AsyncIterator<SifeSincronizarListaMensajesServicio>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarListaMensajesServicioNullablePromise
  extends Promise<SifeSincronizarListaMensajesServicio | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaPaisOrigenEdge {
  node: SifeSincronizarParametricaPaisOrigen;
  cursor: String;
}

export interface SifeSincronizarParametricaPaisOrigenEdgePromise
  extends Promise<SifeSincronizarParametricaPaisOrigenEdge>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaPaisOrigenPromise>() => T;
  cursor: () => Promise<String>;
}

export interface SifeSincronizarParametricaPaisOrigenEdgeSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaPaisOrigenEdge>>,
    Fragmentable {
  node: <T = SifeSincronizarParametricaPaisOrigenSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface SifeSincronizarParametricaTipoModalidadSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoModalidad;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoModalidadPreviousValues;
}

export interface SifeSincronizarParametricaTipoModalidadSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoModalidadSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoModalidadPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoModalidadPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoModalidadSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoModalidadSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoModalidadSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoModalidadPreviousValuesSubscription
  >() => T;
}

export interface AggregateSifeSincronizarParametricaTipoModalidad {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoModalidadPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoModalidad>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoModalidadSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoModalidad>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoDocumentoSectorEdge[];
}

export interface SifeSincronizarParametricaTipoDocumentoSectorConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoDocumentoSectorConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoDocumentoSectorEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoSectorPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoDocumentoSectorConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoDocumentoSectorConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<
        SifeSincronizarParametricaTipoDocumentoSectorEdgeSubscription
      >
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoDocumentoSectorSubscription
  >() => T;
}

export interface SifeSincronizarParametricaTipoMonedaPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoMonedaPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoMonedaPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoMonedaPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMonedaPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoMonedaSubscriptionPayload {
  mutation: MutationType;
  node: SifeSincronizarParametricaTipoMoneda;
  updatedFields: String[];
  previousValues: SifeSincronizarParametricaTipoMonedaPreviousValues;
}

export interface SifeSincronizarParametricaTipoMonedaSubscriptionPayloadPromise
  extends Promise<SifeSincronizarParametricaTipoMonedaSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = SifeSincronizarParametricaTipoMonedaPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <
    T = SifeSincronizarParametricaTipoMonedaPreviousValuesPromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoMonedaSubscriptionPayloadSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoMonedaSubscriptionPayload>
    >,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = SifeSincronizarParametricaTipoMonedaSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <
    T = SifeSincronizarParametricaTipoMonedaPreviousValuesSubscription
  >() => T;
}

export interface AggregateSifeSincronizarListaLeyendasFactura {
  count: Int;
}

export interface AggregateSifeSincronizarListaLeyendasFacturaPromise
  extends Promise<AggregateSifeSincronizarListaLeyendasFactura>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarListaLeyendasFacturaSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizarListaLeyendasFactura>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoModalidadPreviousValues {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoModalidadPreviousValuesPromise
  extends Promise<SifeSincronizarParametricaTipoModalidadPreviousValues>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoModalidadPreviousValuesSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoModalidadPreviousValues>
    >,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoFiscal {
  count: Int;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoFiscalPromise
  extends Promise<AggregateSifeSincronizarParametricaTipoDocumentoFiscal>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarParametricaTipoDocumentoFiscalSubscription
  extends Promise<
      AsyncIterator<AggregateSifeSincronizarParametricaTipoDocumentoFiscal>
    >,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface SifeSincronizarParametricaTipoMetodoPago {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaTipoMetodoPagoPromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPago>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaTipoMetodoPago>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaTipoMetodoPagoNullablePromise
  extends Promise<SifeSincronizarParametricaTipoMetodoPago | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaUnidadMedida {
  id: ID_Output;
  codigoClasificador?: Int;
  descripcion?: String;
  fecha?: DateTimeOutput;
}

export interface SifeSincronizarParametricaUnidadMedidaPromise
  extends Promise<SifeSincronizarParametricaUnidadMedida>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaUnidadMedidaSubscription
  extends Promise<AsyncIterator<SifeSincronizarParametricaUnidadMedida>>,
    Fragmentable {
  id: () => Promise<AsyncIterator<ID_Output>>;
  codigoClasificador: () => Promise<AsyncIterator<Int>>;
  descripcion: () => Promise<AsyncIterator<String>>;
  fecha: () => Promise<AsyncIterator<DateTimeOutput>>;
}

export interface SifeSincronizarParametricaUnidadMedidaNullablePromise
  extends Promise<SifeSincronizarParametricaUnidadMedida | null>,
    Fragmentable {
  id: () => Promise<ID_Output>;
  codigoClasificador: () => Promise<Int>;
  descripcion: () => Promise<String>;
  fecha: () => Promise<DateTimeOutput>;
}

export interface SifeSincronizarParametricaTipoAmbienteConnection {
  pageInfo: PageInfo;
  edges: SifeSincronizarParametricaTipoAmbienteEdge[];
}

export interface SifeSincronizarParametricaTipoAmbienteConnectionPromise
  extends Promise<SifeSincronizarParametricaTipoAmbienteConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <
    T = FragmentableArray<SifeSincronizarParametricaTipoAmbienteEdge>
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoAmbientePromise
  >() => T;
}

export interface SifeSincronizarParametricaTipoAmbienteConnectionSubscription
  extends Promise<
      AsyncIterator<SifeSincronizarParametricaTipoAmbienteConnection>
    >,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <
    T = Promise<
      AsyncIterator<SifeSincronizarParametricaTipoAmbienteEdgeSubscription>
    >
  >() => T;
  aggregate: <
    T = AggregateSifeSincronizarParametricaTipoAmbienteSubscription
  >() => T;
}

export interface AggregateSifeSincronizar {
  count: Int;
}

export interface AggregateSifeSincronizarPromise
  extends Promise<AggregateSifeSincronizar>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateSifeSincronizarSubscription
  extends Promise<AsyncIterator<AggregateSifeSincronizar>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

/*
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
*/
export type String = string;

/*
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
*/
export type Int = number;

/*
DateTime scalar input type, allowing Date
*/
export type DateTimeInput = Date | string;

/*
DateTime scalar output type, which is always a string
*/
export type DateTimeOutput = string;

/*
The `Boolean` scalar type represents `true` or `false`.
*/
export type Boolean = boolean;

export type Long = string;

/*
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
*/
export type ID_Input = string | number;
export type ID_Output = string;

/**
 * Model Metadata
 */

export const models: Model[] = [
  {
    name: "SifeSincronizar",
    embedded: false
  },
  {
    name: "SifeSincronizarActividade",
    embedded: false
  },
  {
    name: "SifeSincronizarListaLeyendasFactura",
    embedded: false
  },
  {
    name: "SifeSincronizarListaMensajesServicio",
    embedded: false
  },
  {
    name: "SifeSincronizarListaProductosServicio",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaEventosSignificativo",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaMotivoAnulacion",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaPaisOrigen",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoAmbiente",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoComponente",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoDepartamento",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoDocumentoFiscal",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoDocumentoIdentidad",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoDocumentoSector",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoEmision",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoMetodoPago",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoModalidad",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoMoneda",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaTipoPuntoVenta",
    embedded: false
  },
  {
    name: "SifeSincronizarParametricaUnidadMedida",
    embedded: false
  }
];

/**
 * Type Defs
 */

export const prisma: Prisma;
